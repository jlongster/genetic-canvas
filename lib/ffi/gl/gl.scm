(c-declare "#include \"gl/gl.h\"")
(include "types.scm")

(define (display-gl-error)
  (display "ERROR: ")
  (display (gluErrorString (glGetError)))
  (newline))

(define GL_LOGIC_OP (lambda () GL_INDEX_LOGIC_OP))
(define GL_TEXTURE_COMPONENTS (lambda () GL_TEXTURE_INTERNAL_FORMAT))
(define GL_VERSION_1_1 1)
(define GL_VERSION_1_2 1)
(define GL_VERSION_1_3 1)
(define GL_VERSION_1_4 1)
(define GL_VERSION_1_5 1)
(define GL_VERSION_2_0 1)
(define GL_VERSION_2_1 1)
(define GL_ACCUM 256)
(define GL_LOAD 257)
(define GL_RETURN 258)
(define GL_MULT 259)
(define GL_ADD 260)
(define GL_NEVER 512)
(define GL_LESS 513)
(define GL_EQUAL 514)
(define GL_LEQUAL 515)
(define GL_GREATER 516)
(define GL_NOTEQUAL 517)
(define GL_GEQUAL 518)
(define GL_ALWAYS 519)
(define GL_CURRENT_BIT 1)
(define GL_POINT_BIT 2)
(define GL_LINE_BIT 4)
(define GL_POLYGON_BIT 8)
(define GL_POLYGON_STIPPLE_BIT 16)
(define GL_PIXEL_MODE_BIT 32)
(define GL_LIGHTING_BIT 64)
(define GL_FOG_BIT 128)
(define GL_DEPTH_BUFFER_BIT 256)
(define GL_ACCUM_BUFFER_BIT 512)
(define GL_STENCIL_BUFFER_BIT 1024)
(define GL_VIEWPORT_BIT 2048)
(define GL_TRANSFORM_BIT 4096)
(define GL_ENABLE_BIT 8192)
(define GL_COLOR_BUFFER_BIT 16384)
(define GL_HINT_BIT 32768)
(define GL_EVAL_BIT 65536)
(define GL_LIST_BIT 131072)
(define GL_TEXTURE_BIT 262144)
(define GL_SCISSOR_BIT 524288)
(define GL_ALL_ATTRIB_BITS 1048575)
(define GL_POINTS 0)
(define GL_LINES 1)
(define GL_LINE_LOOP 2)
(define GL_LINE_STRIP 3)
(define GL_TRIANGLES 4)
(define GL_TRIANGLE_STRIP 5)
(define GL_TRIANGLE_FAN 6)
(define GL_QUADS 7)
(define GL_QUAD_STRIP 8)
(define GL_POLYGON 9)
(define GL_ZERO 0)
(define GL_ONE 1)
(define GL_SRC_COLOR 768)
(define GL_ONE_MINUS_SRC_COLOR 769)
(define GL_SRC_ALPHA 770)
(define GL_ONE_MINUS_SRC_ALPHA 771)
(define GL_DST_ALPHA 772)
(define GL_ONE_MINUS_DST_ALPHA 773)
(define GL_DST_COLOR 774)
(define GL_ONE_MINUS_DST_COLOR 775)
(define GL_SRC_ALPHA_SATURATE 776)
(define GL_TRUE 1)
(define GL_FALSE 0)
(define GL_CLIP_PLANE0 12288)
(define GL_CLIP_PLANE1 12289)
(define GL_CLIP_PLANE2 12290)
(define GL_CLIP_PLANE3 12291)
(define GL_CLIP_PLANE4 12292)
(define GL_CLIP_PLANE5 12293)
(define GL_BYTE 5120)
(define GL_UNSIGNED_BYTE 5121)
(define GL_SHORT 5122)
(define GL_UNSIGNED_SHORT 5123)
(define GL_INT 5124)
(define GL_UNSIGNED_INT 5125)
(define GL_FLOAT 5126)
(define GL_2_BYTES 5127)
(define GL_3_BYTES 5128)
(define GL_4_BYTES 5129)
(define GL_DOUBLE 5130)
(define GL_NONE 0)
(define GL_FRONT_LEFT 1024)
(define GL_FRONT_RIGHT 1025)
(define GL_BACK_LEFT 1026)
(define GL_BACK_RIGHT 1027)
(define GL_FRONT 1028)
(define GL_BACK 1029)
(define GL_LEFT 1030)
(define GL_RIGHT 1031)
(define GL_FRONT_AND_BACK 1032)
(define GL_AUX0 1033)
(define GL_AUX1 1034)
(define GL_AUX2 1035)
(define GL_AUX3 1036)
(define GL_NO_ERROR 0)
(define GL_INVALID_ENUM 1280)
(define GL_INVALID_VALUE 1281)
(define GL_INVALID_OPERATION 1282)
(define GL_STACK_OVERFLOW 1283)
(define GL_STACK_UNDERFLOW 1284)
(define GL_OUT_OF_MEMORY 1285)
(define GL_2D 1536)
(define GL_3D 1537)
(define GL_3D_COLOR 1538)
(define GL_3D_COLOR_TEXTURE 1539)
(define GL_4D_COLOR_TEXTURE 1540)
(define GL_PASS_THROUGH_TOKEN 1792)
(define GL_POINT_TOKEN 1793)
(define GL_LINE_TOKEN 1794)
(define GL_POLYGON_TOKEN 1795)
(define GL_BITMAP_TOKEN 1796)
(define GL_DRAW_PIXEL_TOKEN 1797)
(define GL_COPY_PIXEL_TOKEN 1798)
(define GL_LINE_RESET_TOKEN 1799)
(define GL_EXP 2048)
(define GL_EXP2 2049)
(define GL_CW 2304)
(define GL_CCW 2305)
(define GL_COEFF 2560)
(define GL_ORDER 2561)
(define GL_DOMAIN 2562)
(define GL_CURRENT_COLOR 2816)
(define GL_CURRENT_INDEX 2817)
(define GL_CURRENT_NORMAL 2818)
(define GL_CURRENT_TEXTURE_COORDS 2819)
(define GL_CURRENT_RASTER_COLOR 2820)
(define GL_CURRENT_RASTER_INDEX 2821)
(define GL_CURRENT_RASTER_TEXTURE_COORDS 2822)
(define GL_CURRENT_RASTER_POSITION 2823)
(define GL_CURRENT_RASTER_POSITION_VALID 2824)
(define GL_CURRENT_RASTER_DISTANCE 2825)
(define GL_POINT_SMOOTH 2832)
(define GL_POINT_SIZE 2833)
(define GL_POINT_SIZE_RANGE 2834)
(define GL_POINT_SIZE_GRANULARITY 2835)
(define GL_LINE_SMOOTH 2848)
(define GL_LINE_WIDTH 2849)
(define GL_LINE_WIDTH_RANGE 2850)
(define GL_LINE_WIDTH_GRANULARITY 2851)
(define GL_LINE_STIPPLE 2852)
(define GL_LINE_STIPPLE_PATTERN 2853)
(define GL_LINE_STIPPLE_REPEAT 2854)
(define GL_LIST_MODE 2864)
(define GL_MAX_LIST_NESTING 2865)
(define GL_LIST_BASE 2866)
(define GL_LIST_INDEX 2867)
(define GL_POLYGON_MODE 2880)
(define GL_POLYGON_SMOOTH 2881)
(define GL_POLYGON_STIPPLE 2882)
(define GL_EDGE_FLAG 2883)
(define GL_CULL_FACE 2884)
(define GL_CULL_FACE_MODE 2885)
(define GL_FRONT_FACE 2886)
(define GL_LIGHTING 2896)
(define GL_LIGHT_MODEL_LOCAL_VIEWER 2897)
(define GL_LIGHT_MODEL_TWO_SIDE 2898)
(define GL_LIGHT_MODEL_AMBIENT 2899)
(define GL_SHADE_MODEL 2900)
(define GL_COLOR_MATERIAL_FACE 2901)
(define GL_COLOR_MATERIAL_PARAMETER 2902)
(define GL_COLOR_MATERIAL 2903)
(define GL_FOG 2912)
(define GL_FOG_INDEX 2913)
(define GL_FOG_DENSITY 2914)
(define GL_FOG_START 2915)
(define GL_FOG_END 2916)
(define GL_FOG_MODE 2917)
(define GL_FOG_COLOR 2918)
(define GL_DEPTH_RANGE 2928)
(define GL_DEPTH_TEST 2929)
(define GL_DEPTH_WRITEMASK 2930)
(define GL_DEPTH_CLEAR_VALUE 2931)
(define GL_DEPTH_FUNC 2932)
(define GL_ACCUM_CLEAR_VALUE 2944)
(define GL_STENCIL_TEST 2960)
(define GL_STENCIL_CLEAR_VALUE 2961)
(define GL_STENCIL_FUNC 2962)
(define GL_STENCIL_VALUE_MASK 2963)
(define GL_STENCIL_FAIL 2964)
(define GL_STENCIL_PASS_DEPTH_FAIL 2965)
(define GL_STENCIL_PASS_DEPTH_PASS 2966)
(define GL_STENCIL_REF 2967)
(define GL_STENCIL_WRITEMASK 2968)
(define GL_MATRIX_MODE 2976)
(define GL_NORMALIZE 2977)
(define GL_VIEWPORT 2978)
(define GL_MODELVIEW_STACK_DEPTH 2979)
(define GL_PROJECTION_STACK_DEPTH 2980)
(define GL_TEXTURE_STACK_DEPTH 2981)
(define GL_MODELVIEW_MATRIX 2982)
(define GL_PROJECTION_MATRIX 2983)
(define GL_TEXTURE_MATRIX 2984)
(define GL_ATTRIB_STACK_DEPTH 2992)
(define GL_CLIENT_ATTRIB_STACK_DEPTH 2993)
(define GL_ALPHA_TEST 3008)
(define GL_ALPHA_TEST_FUNC 3009)
(define GL_ALPHA_TEST_REF 3010)
(define GL_DITHER 3024)
(define GL_BLEND_DST 3040)
(define GL_BLEND_SRC 3041)
(define GL_BLEND 3042)
(define GL_LOGIC_OP_MODE 3056)
(define GL_INDEX_LOGIC_OP 3057)
(define GL_COLOR_LOGIC_OP 3058)
(define GL_AUX_BUFFERS 3072)
(define GL_DRAW_BUFFER 3073)
(define GL_READ_BUFFER 3074)
(define GL_SCISSOR_BOX 3088)
(define GL_SCISSOR_TEST 3089)
(define GL_INDEX_CLEAR_VALUE 3104)
(define GL_INDEX_WRITEMASK 3105)
(define GL_COLOR_CLEAR_VALUE 3106)
(define GL_COLOR_WRITEMASK 3107)
(define GL_INDEX_MODE 3120)
(define GL_RGBA_MODE 3121)
(define GL_DOUBLEBUFFER 3122)
(define GL_STEREO 3123)
(define GL_RENDER_MODE 3136)
(define GL_PERSPECTIVE_CORRECTION_HINT 3152)
(define GL_POINT_SMOOTH_HINT 3153)
(define GL_LINE_SMOOTH_HINT 3154)
(define GL_POLYGON_SMOOTH_HINT 3155)
(define GL_FOG_HINT 3156)
(define GL_TEXTURE_GEN_S 3168)
(define GL_TEXTURE_GEN_T 3169)
(define GL_TEXTURE_GEN_R 3170)
(define GL_TEXTURE_GEN_Q 3171)
(define GL_PIXEL_MAP_I_TO_I 3184)
(define GL_PIXEL_MAP_S_TO_S 3185)
(define GL_PIXEL_MAP_I_TO_R 3186)
(define GL_PIXEL_MAP_I_TO_G 3187)
(define GL_PIXEL_MAP_I_TO_B 3188)
(define GL_PIXEL_MAP_I_TO_A 3189)
(define GL_PIXEL_MAP_R_TO_R 3190)
(define GL_PIXEL_MAP_G_TO_G 3191)
(define GL_PIXEL_MAP_B_TO_B 3192)
(define GL_PIXEL_MAP_A_TO_A 3193)
(define GL_PIXEL_MAP_I_TO_I_SIZE 3248)
(define GL_PIXEL_MAP_S_TO_S_SIZE 3249)
(define GL_PIXEL_MAP_I_TO_R_SIZE 3250)
(define GL_PIXEL_MAP_I_TO_G_SIZE 3251)
(define GL_PIXEL_MAP_I_TO_B_SIZE 3252)
(define GL_PIXEL_MAP_I_TO_A_SIZE 3253)
(define GL_PIXEL_MAP_R_TO_R_SIZE 3254)
(define GL_PIXEL_MAP_G_TO_G_SIZE 3255)
(define GL_PIXEL_MAP_B_TO_B_SIZE 3256)
(define GL_PIXEL_MAP_A_TO_A_SIZE 3257)
(define GL_UNPACK_SWAP_BYTES 3312)
(define GL_UNPACK_LSB_FIRST 3313)
(define GL_UNPACK_ROW_LENGTH 3314)
(define GL_UNPACK_SKIP_ROWS 3315)
(define GL_UNPACK_SKIP_PIXELS 3316)
(define GL_UNPACK_ALIGNMENT 3317)
(define GL_PACK_SWAP_BYTES 3328)
(define GL_PACK_LSB_FIRST 3329)
(define GL_PACK_ROW_LENGTH 3330)
(define GL_PACK_SKIP_ROWS 3331)
(define GL_PACK_SKIP_PIXELS 3332)
(define GL_PACK_ALIGNMENT 3333)
(define GL_MAP_COLOR 3344)
(define GL_MAP_STENCIL 3345)
(define GL_INDEX_SHIFT 3346)
(define GL_INDEX_OFFSET 3347)
(define GL_RED_SCALE 3348)
(define GL_RED_BIAS 3349)
(define GL_ZOOM_X 3350)
(define GL_ZOOM_Y 3351)
(define GL_GREEN_SCALE 3352)
(define GL_GREEN_BIAS 3353)
(define GL_BLUE_SCALE 3354)
(define GL_BLUE_BIAS 3355)
(define GL_ALPHA_SCALE 3356)
(define GL_ALPHA_BIAS 3357)
(define GL_DEPTH_SCALE 3358)
(define GL_DEPTH_BIAS 3359)
(define GL_MAX_EVAL_ORDER 3376)
(define GL_MAX_LIGHTS 3377)
(define GL_MAX_CLIP_PLANES 3378)
(define GL_MAX_TEXTURE_SIZE 3379)
(define GL_MAX_PIXEL_MAP_TABLE 3380)
(define GL_MAX_ATTRIB_STACK_DEPTH 3381)
(define GL_MAX_MODELVIEW_STACK_DEPTH 3382)
(define GL_MAX_NAME_STACK_DEPTH 3383)
(define GL_MAX_PROJECTION_STACK_DEPTH 3384)
(define GL_MAX_TEXTURE_STACK_DEPTH 3385)
(define GL_MAX_VIEWPORT_DIMS 3386)
(define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 3387)
(define GL_SUBPIXEL_BITS 3408)
(define GL_INDEX_BITS 3409)
(define GL_RED_BITS 3410)
(define GL_GREEN_BITS 3411)
(define GL_BLUE_BITS 3412)
(define GL_ALPHA_BITS 3413)
(define GL_DEPTH_BITS 3414)
(define GL_STENCIL_BITS 3415)
(define GL_ACCUM_RED_BITS 3416)
(define GL_ACCUM_GREEN_BITS 3417)
(define GL_ACCUM_BLUE_BITS 3418)
(define GL_ACCUM_ALPHA_BITS 3419)
(define GL_NAME_STACK_DEPTH 3440)
(define GL_AUTO_NORMAL 3456)
(define GL_MAP1_COLOR_4 3472)
(define GL_MAP1_INDEX 3473)
(define GL_MAP1_NORMAL 3474)
(define GL_MAP1_TEXTURE_COORD_1 3475)
(define GL_MAP1_TEXTURE_COORD_2 3476)
(define GL_MAP1_TEXTURE_COORD_3 3477)
(define GL_MAP1_TEXTURE_COORD_4 3478)
(define GL_MAP1_VERTEX_3 3479)
(define GL_MAP1_VERTEX_4 3480)
(define GL_MAP2_COLOR_4 3504)
(define GL_MAP2_INDEX 3505)
(define GL_MAP2_NORMAL 3506)
(define GL_MAP2_TEXTURE_COORD_1 3507)
(define GL_MAP2_TEXTURE_COORD_2 3508)
(define GL_MAP2_TEXTURE_COORD_3 3509)
(define GL_MAP2_TEXTURE_COORD_4 3510)
(define GL_MAP2_VERTEX_3 3511)
(define GL_MAP2_VERTEX_4 3512)
(define GL_MAP1_GRID_DOMAIN 3536)
(define GL_MAP1_GRID_SEGMENTS 3537)
(define GL_MAP2_GRID_DOMAIN 3538)
(define GL_MAP2_GRID_SEGMENTS 3539)
(define GL_TEXTURE_1D 3552)
(define GL_TEXTURE_2D 3553)
(define GL_FEEDBACK_BUFFER_POINTER 3568)
(define GL_FEEDBACK_BUFFER_SIZE 3569)
(define GL_FEEDBACK_BUFFER_TYPE 3570)
(define GL_SELECTION_BUFFER_POINTER 3571)
(define GL_SELECTION_BUFFER_SIZE 3572)
(define GL_TEXTURE_WIDTH 4096)
(define GL_TEXTURE_HEIGHT 4097)
(define GL_TEXTURE_INTERNAL_FORMAT 4099)
(define GL_TEXTURE_BORDER_COLOR 4100)
(define GL_TEXTURE_BORDER 4101)
(define GL_DONT_CARE 4352)
(define GL_FASTEST 4353)
(define GL_NICEST 4354)
(define GL_LIGHT0 16384)
(define GL_LIGHT1 16385)
(define GL_LIGHT2 16386)
(define GL_LIGHT3 16387)
(define GL_LIGHT4 16388)
(define GL_LIGHT5 16389)
(define GL_LIGHT6 16390)
(define GL_LIGHT7 16391)
(define GL_AMBIENT 4608)
(define GL_DIFFUSE 4609)
(define GL_SPECULAR 4610)
(define GL_POSITION 4611)
(define GL_SPOT_DIRECTION 4612)
(define GL_SPOT_EXPONENT 4613)
(define GL_SPOT_CUTOFF 4614)
(define GL_CONSTANT_ATTENUATION 4615)
(define GL_LINEAR_ATTENUATION 4616)
(define GL_QUADRATIC_ATTENUATION 4617)
(define GL_COMPILE 4864)
(define GL_COMPILE_AND_EXECUTE 4865)
(define GL_CLEAR 5376)
(define GL_AND 5377)
(define GL_AND_REVERSE 5378)
(define GL_COPY 5379)
(define GL_AND_INVERTED 5380)
(define GL_NOOP 5381)
(define GL_XOR 5382)
(define GL_OR 5383)
(define GL_NOR 5384)
(define GL_EQUIV 5385)
(define GL_INVERT 5386)
(define GL_OR_REVERSE 5387)
(define GL_COPY_INVERTED 5388)
(define GL_OR_INVERTED 5389)
(define GL_NAND 5390)
(define GL_SET 5391)
(define GL_EMISSION 5632)
(define GL_SHININESS 5633)
(define GL_AMBIENT_AND_DIFFUSE 5634)
(define GL_COLOR_INDEXES 5635)
(define GL_MODELVIEW 5888)
(define GL_PROJECTION 5889)
(define GL_TEXTURE 5890)
(define GL_COLOR 6144)
(define GL_DEPTH 6145)
(define GL_STENCIL 6146)
(define GL_COLOR_INDEX 6400)
(define GL_STENCIL_INDEX 6401)
(define GL_DEPTH_COMPONENT 6402)
(define GL_RED 6403)
(define GL_GREEN 6404)
(define GL_BLUE 6405)
(define GL_ALPHA 6406)
(define GL_RGB 6407)
(define GL_RGBA 6408)
(define GL_LUMINANCE 6409)
(define GL_LUMINANCE_ALPHA 6410)
(define GL_BITMAP 6656)
(define GL_POINT 6912)
(define GL_LINE 6913)
(define GL_FILL 6914)
(define GL_RENDER 7168)
(define GL_FEEDBACK 7169)
(define GL_SELECT 7170)
(define GL_FLAT 7424)
(define GL_SMOOTH 7425)
(define GL_KEEP 7680)
(define GL_REPLACE 7681)
(define GL_INCR 7682)
(define GL_DECR 7683)
(define GL_VENDOR 7936)
(define GL_RENDERER 7937)
(define GL_VERSION 7938)
(define GL_EXTENSIONS 7939)
(define GL_S 8192)
(define GL_T 8193)
(define GL_R 8194)
(define GL_Q 8195)
(define GL_MODULATE 8448)
(define GL_DECAL 8449)
(define GL_TEXTURE_ENV_MODE 8704)
(define GL_TEXTURE_ENV_COLOR 8705)
(define GL_TEXTURE_ENV 8960)
(define GL_EYE_LINEAR 9216)
(define GL_OBJECT_LINEAR 9217)
(define GL_SPHERE_MAP 9218)
(define GL_TEXTURE_GEN_MODE 9472)
(define GL_OBJECT_PLANE 9473)
(define GL_EYE_PLANE 9474)
(define GL_NEAREST 9728)
(define GL_LINEAR 9729)
(define GL_NEAREST_MIPMAP_NEAREST 9984)
(define GL_LINEAR_MIPMAP_NEAREST 9985)
(define GL_NEAREST_MIPMAP_LINEAR 9986)
(define GL_LINEAR_MIPMAP_LINEAR 9987)
(define GL_TEXTURE_MAG_FILTER 10240)
(define GL_TEXTURE_MIN_FILTER 10241)
(define GL_TEXTURE_WRAP_S 10242)
(define GL_TEXTURE_WRAP_T 10243)
(define GL_CLAMP 10496)
(define GL_REPEAT 10497)
(define GL_CLIENT_PIXEL_STORE_BIT 1)
(define GL_CLIENT_VERTEX_ARRAY_BIT 2)
(define GL_CLIENT_ALL_ATTRIB_BITS 4294967295)
(define GL_POLYGON_OFFSET_FACTOR 32824)
(define GL_POLYGON_OFFSET_UNITS 10752)
(define GL_POLYGON_OFFSET_POINT 10753)
(define GL_POLYGON_OFFSET_LINE 10754)
(define GL_POLYGON_OFFSET_FILL 32823)
(define GL_ALPHA4 32827)
(define GL_ALPHA8 32828)
(define GL_ALPHA12 32829)
(define GL_ALPHA16 32830)
(define GL_LUMINANCE4 32831)
(define GL_LUMINANCE8 32832)
(define GL_LUMINANCE12 32833)
(define GL_LUMINANCE16 32834)
(define GL_LUMINANCE4_ALPHA4 32835)
(define GL_LUMINANCE6_ALPHA2 32836)
(define GL_LUMINANCE8_ALPHA8 32837)
(define GL_LUMINANCE12_ALPHA4 32838)
(define GL_LUMINANCE12_ALPHA12 32839)
(define GL_LUMINANCE16_ALPHA16 32840)
(define GL_INTENSITY 32841)
(define GL_INTENSITY4 32842)
(define GL_INTENSITY8 32843)
(define GL_INTENSITY12 32844)
(define GL_INTENSITY16 32845)
(define GL_R3_G3_B2 10768)
(define GL_RGB4 32847)
(define GL_RGB5 32848)
(define GL_RGB8 32849)
(define GL_RGB10 32850)
(define GL_RGB12 32851)
(define GL_RGB16 32852)
(define GL_RGBA2 32853)
(define GL_RGBA4 32854)
(define GL_RGB5_A1 32855)
(define GL_RGBA8 32856)
(define GL_RGB10_A2 32857)
(define GL_RGBA12 32858)
(define GL_RGBA16 32859)
(define GL_TEXTURE_RED_SIZE 32860)
(define GL_TEXTURE_GREEN_SIZE 32861)
(define GL_TEXTURE_BLUE_SIZE 32862)
(define GL_TEXTURE_ALPHA_SIZE 32863)
(define GL_TEXTURE_LUMINANCE_SIZE 32864)
(define GL_TEXTURE_INTENSITY_SIZE 32865)
(define GL_PROXY_TEXTURE_1D 32867)
(define GL_PROXY_TEXTURE_2D 32868)
(define GL_TEXTURE_PRIORITY 32870)
(define GL_TEXTURE_RESIDENT 32871)
(define GL_TEXTURE_BINDING_1D 32872)
(define GL_TEXTURE_BINDING_2D 32873)
(define GL_TEXTURE_BINDING_3D 32874)
(define GL_VERTEX_ARRAY 32884)
(define GL_NORMAL_ARRAY 32885)
(define GL_COLOR_ARRAY 32886)
(define GL_INDEX_ARRAY 32887)
(define GL_TEXTURE_COORD_ARRAY 32888)
(define GL_EDGE_FLAG_ARRAY 32889)
(define GL_VERTEX_ARRAY_SIZE 32890)
(define GL_VERTEX_ARRAY_TYPE 32891)
(define GL_VERTEX_ARRAY_STRIDE 32892)
(define GL_NORMAL_ARRAY_TYPE 32894)
(define GL_NORMAL_ARRAY_STRIDE 32895)
(define GL_COLOR_ARRAY_SIZE 32897)
(define GL_COLOR_ARRAY_TYPE 32898)
(define GL_COLOR_ARRAY_STRIDE 32899)
(define GL_INDEX_ARRAY_TYPE 32901)
(define GL_INDEX_ARRAY_STRIDE 32902)
(define GL_TEXTURE_COORD_ARRAY_SIZE 32904)
(define GL_TEXTURE_COORD_ARRAY_TYPE 32905)
(define GL_TEXTURE_COORD_ARRAY_STRIDE 32906)
(define GL_EDGE_FLAG_ARRAY_STRIDE 32908)
(define GL_VERTEX_ARRAY_POINTER 32910)
(define GL_NORMAL_ARRAY_POINTER 32911)
(define GL_COLOR_ARRAY_POINTER 32912)
(define GL_INDEX_ARRAY_POINTER 32913)
(define GL_TEXTURE_COORD_ARRAY_POINTER 32914)
(define GL_EDGE_FLAG_ARRAY_POINTER 32915)
(define GL_V2F 10784)
(define GL_V3F 10785)
(define GL_C4UB_V2F 10786)
(define GL_C4UB_V3F 10787)
(define GL_C3F_V3F 10788)
(define GL_N3F_V3F 10789)
(define GL_C4F_N3F_V3F 10790)
(define GL_T2F_V3F 10791)
(define GL_T4F_V4F 10792)
(define GL_T2F_C4UB_V3F 10793)
(define GL_T2F_C3F_V3F 10794)
(define GL_T2F_N3F_V3F 10795)
(define GL_T2F_C4F_N3F_V3F 10796)
(define GL_T4F_C4F_N3F_V4F 10797)
(define GL_BGR 32992)
(define GL_BGRA 32993)
(define GL_CONSTANT_COLOR 32769)
(define GL_ONE_MINUS_CONSTANT_COLOR 32770)
(define GL_CONSTANT_ALPHA 32771)
(define GL_ONE_MINUS_CONSTANT_ALPHA 32772)
(define GL_BLEND_COLOR 32773)
(define GL_FUNC_ADD 32774)
(define GL_MIN 32775)
(define GL_MAX 32776)
(define GL_BLEND_EQUATION 32777)
(define GL_BLEND_EQUATION_RGB 32777)
(define GL_BLEND_EQUATION_ALPHA 34877)
(define GL_FUNC_SUBTRACT 32778)
(define GL_FUNC_REVERSE_SUBTRACT 32779)
(define GL_COLOR_MATRIX 32945)
(define GL_COLOR_MATRIX_STACK_DEPTH 32946)
(define GL_MAX_COLOR_MATRIX_STACK_DEPTH 32947)
(define GL_POST_COLOR_MATRIX_RED_SCALE 32948)
(define GL_POST_COLOR_MATRIX_GREEN_SCALE 32949)
(define GL_POST_COLOR_MATRIX_BLUE_SCALE 32950)
(define GL_POST_COLOR_MATRIX_ALPHA_SCALE 32951)
(define GL_POST_COLOR_MATRIX_RED_BIAS 32952)
(define GL_POST_COLOR_MATRIX_GREEN_BIAS 32953)
(define GL_POST_COLOR_MATRIX_BLUE_BIAS 32954)
(define GL_POST_COLOR_MATRIX_ALPHA_BIAS 32955)
(define GL_COLOR_TABLE 32976)
(define GL_POST_CONVOLUTION_COLOR_TABLE 32977)
(define GL_POST_COLOR_MATRIX_COLOR_TABLE 32978)
(define GL_PROXY_COLOR_TABLE 32979)
(define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 32980)
(define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 32981)
(define GL_COLOR_TABLE_SCALE 32982)
(define GL_COLOR_TABLE_BIAS 32983)
(define GL_COLOR_TABLE_FORMAT 32984)
(define GL_COLOR_TABLE_WIDTH 32985)
(define GL_COLOR_TABLE_RED_SIZE 32986)
(define GL_COLOR_TABLE_GREEN_SIZE 32987)
(define GL_COLOR_TABLE_BLUE_SIZE 32988)
(define GL_COLOR_TABLE_ALPHA_SIZE 32989)
(define GL_COLOR_TABLE_LUMINANCE_SIZE 32990)
(define GL_COLOR_TABLE_INTENSITY_SIZE 32991)
(define GL_CONVOLUTION_1D 32784)
(define GL_CONVOLUTION_2D 32785)
(define GL_SEPARABLE_2D 32786)
(define GL_CONVOLUTION_BORDER_MODE 32787)
(define GL_CONVOLUTION_FILTER_SCALE 32788)
(define GL_CONVOLUTION_FILTER_BIAS 32789)
(define GL_REDUCE 32790)
(define GL_CONVOLUTION_FORMAT 32791)
(define GL_CONVOLUTION_WIDTH 32792)
(define GL_CONVOLUTION_HEIGHT 32793)
(define GL_MAX_CONVOLUTION_WIDTH 32794)
(define GL_MAX_CONVOLUTION_HEIGHT 32795)
(define GL_POST_CONVOLUTION_RED_SCALE 32796)
(define GL_POST_CONVOLUTION_GREEN_SCALE 32797)
(define GL_POST_CONVOLUTION_BLUE_SCALE 32798)
(define GL_POST_CONVOLUTION_ALPHA_SCALE 32799)
(define GL_POST_CONVOLUTION_RED_BIAS 32800)
(define GL_POST_CONVOLUTION_GREEN_BIAS 32801)
(define GL_POST_CONVOLUTION_BLUE_BIAS 32802)
(define GL_POST_CONVOLUTION_ALPHA_BIAS 32803)
(define GL_CONSTANT_BORDER 33105)
(define GL_REPLICATE_BORDER 33107)
(define GL_CONVOLUTION_BORDER_COLOR 33108)
(define GL_MAX_ELEMENTS_VERTICES 33000)
(define GL_MAX_ELEMENTS_INDICES 33001)
(define GL_HISTOGRAM 32804)
(define GL_PROXY_HISTOGRAM 32805)
(define GL_HISTOGRAM_WIDTH 32806)
(define GL_HISTOGRAM_FORMAT 32807)
(define GL_HISTOGRAM_RED_SIZE 32808)
(define GL_HISTOGRAM_GREEN_SIZE 32809)
(define GL_HISTOGRAM_BLUE_SIZE 32810)
(define GL_HISTOGRAM_ALPHA_SIZE 32811)
(define GL_HISTOGRAM_LUMINANCE_SIZE 32812)
(define GL_HISTOGRAM_SINK 32813)
(define GL_MINMAX 32814)
(define GL_MINMAX_FORMAT 32815)
(define GL_MINMAX_SINK 32816)
(define GL_TABLE_TOO_LARGE 32817)
(define GL_UNSIGNED_BYTE_3_3_2 32818)
(define GL_UNSIGNED_SHORT_4_4_4_4 32819)
(define GL_UNSIGNED_SHORT_5_5_5_1 32820)
(define GL_UNSIGNED_INT_8_8_8_8 32821)
(define GL_UNSIGNED_INT_10_10_10_2 32822)
(define GL_UNSIGNED_BYTE_2_3_3_REV 33634)
(define GL_UNSIGNED_SHORT_5_6_5 33635)
(define GL_UNSIGNED_SHORT_5_6_5_REV 33636)
(define GL_UNSIGNED_SHORT_4_4_4_4_REV 33637)
(define GL_UNSIGNED_SHORT_1_5_5_5_REV 33638)
(define GL_UNSIGNED_INT_8_8_8_8_REV 33639)
(define GL_UNSIGNED_INT_2_10_10_10_REV 33640)
(define GL_RESCALE_NORMAL 32826)
(define GL_LIGHT_MODEL_COLOR_CONTROL 33272)
(define GL_SINGLE_COLOR 33273)
(define GL_SEPARATE_SPECULAR_COLOR 33274)
(define GL_PACK_SKIP_IMAGES 32875)
(define GL_PACK_IMAGE_HEIGHT 32876)
(define GL_UNPACK_SKIP_IMAGES 32877)
(define GL_UNPACK_IMAGE_HEIGHT 32878)
(define GL_TEXTURE_3D 32879)
(define GL_PROXY_TEXTURE_3D 32880)
(define GL_TEXTURE_DEPTH 32881)
(define GL_TEXTURE_WRAP_R 32882)
(define GL_MAX_3D_TEXTURE_SIZE 32883)
(define GL_CLAMP_TO_EDGE 33071)
(define GL_CLAMP_TO_BORDER 33069)
(define GL_TEXTURE_MIN_LOD 33082)
(define GL_TEXTURE_MAX_LOD 33083)
(define GL_TEXTURE_BASE_LEVEL 33084)
(define GL_TEXTURE_MAX_LEVEL 33085)
(define GL_SMOOTH_POINT_SIZE_RANGE 2834)
(define GL_SMOOTH_POINT_SIZE_GRANULARITY 2835)
(define GL_SMOOTH_LINE_WIDTH_RANGE 2850)
(define GL_SMOOTH_LINE_WIDTH_GRANULARITY 2851)
(define GL_ALIASED_POINT_SIZE_RANGE 33901)
(define GL_ALIASED_LINE_WIDTH_RANGE 33902)
(define GL_TEXTURE0 33984)
(define GL_TEXTURE1 33985)
(define GL_TEXTURE2 33986)
(define GL_TEXTURE3 33987)
(define GL_TEXTURE4 33988)
(define GL_TEXTURE5 33989)
(define GL_TEXTURE6 33990)
(define GL_TEXTURE7 33991)
(define GL_TEXTURE8 33992)
(define GL_TEXTURE9 33993)
(define GL_TEXTURE10 33994)
(define GL_TEXTURE11 33995)
(define GL_TEXTURE12 33996)
(define GL_TEXTURE13 33997)
(define GL_TEXTURE14 33998)
(define GL_TEXTURE15 33999)
(define GL_TEXTURE16 34000)
(define GL_TEXTURE17 34001)
(define GL_TEXTURE18 34002)
(define GL_TEXTURE19 34003)
(define GL_TEXTURE20 34004)
(define GL_TEXTURE21 34005)
(define GL_TEXTURE22 34006)
(define GL_TEXTURE23 34007)
(define GL_TEXTURE24 34008)
(define GL_TEXTURE25 34009)
(define GL_TEXTURE26 34010)
(define GL_TEXTURE27 34011)
(define GL_TEXTURE28 34012)
(define GL_TEXTURE29 34013)
(define GL_TEXTURE30 34014)
(define GL_TEXTURE31 34015)
(define GL_ACTIVE_TEXTURE 34016)
(define GL_CLIENT_ACTIVE_TEXTURE 34017)
(define GL_MAX_TEXTURE_UNITS 34018)
(define GL_COMBINE 34160)
(define GL_COMBINE_RGB 34161)
(define GL_COMBINE_ALPHA 34162)
(define GL_RGB_SCALE 34163)
(define GL_ADD_SIGNED 34164)
(define GL_INTERPOLATE 34165)
(define GL_CONSTANT 34166)
(define GL_PRIMARY_COLOR 34167)
(define GL_PREVIOUS 34168)
(define GL_SUBTRACT 34023)
(define GL_SRC0_RGB 34176)
(define GL_SRC1_RGB 34177)
(define GL_SRC2_RGB 34178)
(define GL_SRC3_RGB 34179)
(define GL_SRC4_RGB 34180)
(define GL_SRC5_RGB 34181)
(define GL_SRC6_RGB 34182)
(define GL_SRC7_RGB 34183)
(define GL_SRC0_ALPHA 34184)
(define GL_SRC1_ALPHA 34185)
(define GL_SRC2_ALPHA 34186)
(define GL_SRC3_ALPHA 34187)
(define GL_SRC4_ALPHA 34188)
(define GL_SRC5_ALPHA 34189)
(define GL_SRC6_ALPHA 34190)
(define GL_SRC7_ALPHA 34191)
(define GL_SOURCE0_RGB 34176)
(define GL_SOURCE1_RGB 34177)
(define GL_SOURCE2_RGB 34178)
(define GL_SOURCE3_RGB 34179)
(define GL_SOURCE4_RGB 34180)
(define GL_SOURCE5_RGB 34181)
(define GL_SOURCE6_RGB 34182)
(define GL_SOURCE7_RGB 34183)
(define GL_SOURCE0_ALPHA 34184)
(define GL_SOURCE1_ALPHA 34185)
(define GL_SOURCE2_ALPHA 34186)
(define GL_SOURCE3_ALPHA 34187)
(define GL_SOURCE4_ALPHA 34188)
(define GL_SOURCE5_ALPHA 34189)
(define GL_SOURCE6_ALPHA 34190)
(define GL_SOURCE7_ALPHA 34191)
(define GL_OPERAND0_RGB 34192)
(define GL_OPERAND1_RGB 34193)
(define GL_OPERAND2_RGB 34194)
(define GL_OPERAND3_RGB 34195)
(define GL_OPERAND4_RGB 34196)
(define GL_OPERAND5_RGB 34197)
(define GL_OPERAND6_RGB 34198)
(define GL_OPERAND7_RGB 34199)
(define GL_OPERAND0_ALPHA 34200)
(define GL_OPERAND1_ALPHA 34201)
(define GL_OPERAND2_ALPHA 34202)
(define GL_OPERAND3_ALPHA 34203)
(define GL_OPERAND4_ALPHA 34204)
(define GL_OPERAND5_ALPHA 34205)
(define GL_OPERAND6_ALPHA 34206)
(define GL_OPERAND7_ALPHA 34207)
(define GL_DOT3_RGB 34478)
(define GL_DOT3_RGBA 34479)
(define GL_TRANSPOSE_MODELVIEW_MATRIX 34019)
(define GL_TRANSPOSE_PROJECTION_MATRIX 34020)
(define GL_TRANSPOSE_TEXTURE_MATRIX 34021)
(define GL_TRANSPOSE_COLOR_MATRIX 34022)
(define GL_NORMAL_MAP 34065)
(define GL_REFLECTION_MAP 34066)
(define GL_TEXTURE_CUBE_MAP 34067)
(define GL_TEXTURE_BINDING_CUBE_MAP 34068)
(define GL_TEXTURE_CUBE_MAP_POSITIVE_X 34069)
(define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 34070)
(define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 34071)
(define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 34072)
(define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 34073)
(define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 34074)
(define GL_PROXY_TEXTURE_CUBE_MAP 34075)
(define GL_MAX_CUBE_MAP_TEXTURE_SIZE 34076)
(define GL_COMPRESSED_ALPHA 34025)
(define GL_COMPRESSED_LUMINANCE 34026)
(define GL_COMPRESSED_LUMINANCE_ALPHA 34027)
(define GL_COMPRESSED_INTENSITY 34028)
(define GL_COMPRESSED_RGB 34029)
(define GL_COMPRESSED_RGBA 34030)
(define GL_TEXTURE_COMPRESSION_HINT 34031)
(define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 34464)
(define GL_TEXTURE_COMPRESSED 34465)
(define GL_NUM_COMPRESSED_TEXTURE_FORMATS 34466)
(define GL_COMPRESSED_TEXTURE_FORMATS 34467)
(define GL_MULTISAMPLE 32925)
(define GL_SAMPLE_ALPHA_TO_COVERAGE 32926)
(define GL_SAMPLE_ALPHA_TO_ONE 32927)
(define GL_SAMPLE_COVERAGE 32928)
(define GL_SAMPLE_BUFFERS 32936)
(define GL_SAMPLES 32937)
(define GL_SAMPLE_COVERAGE_VALUE 32938)
(define GL_SAMPLE_COVERAGE_INVERT 32939)
(define GL_MULTISAMPLE_BIT 536870912)
(define GL_DEPTH_COMPONENT16 33189)
(define GL_DEPTH_COMPONENT24 33190)
(define GL_DEPTH_COMPONENT32 33191)
(define GL_TEXTURE_DEPTH_SIZE 34890)
(define GL_DEPTH_TEXTURE_MODE 34891)
(define GL_TEXTURE_COMPARE_MODE 34892)
(define GL_TEXTURE_COMPARE_FUNC 34893)
(define GL_COMPARE_R_TO_TEXTURE 34894)
(define GL_QUERY_COUNTER_BITS 34916)
(define GL_CURRENT_QUERY 34917)
(define GL_QUERY_RESULT 34918)
(define GL_QUERY_RESULT_AVAILABLE 34919)
(define GL_SAMPLES_PASSED 35092)
(define GL_FOG_COORD_SRC 33872)
(define GL_FOG_COORD 33873)
(define GL_FRAGMENT_DEPTH 33874)
(define GL_CURRENT_FOG_COORD 33875)
(define GL_FOG_COORD_ARRAY_TYPE 33876)
(define GL_FOG_COORD_ARRAY_STRIDE 33877)
(define GL_FOG_COORD_ARRAY_POINTER 33878)
(define GL_FOG_COORD_ARRAY 33879)
(define GL_FOG_COORDINATE_SOURCE 33872)
(define GL_FOG_COORDINATE 33873)
(define GL_CURRENT_FOG_COORDINATE 33875)
(define GL_FOG_COORDINATE_ARRAY_TYPE 33876)
(define GL_FOG_COORDINATE_ARRAY_STRIDE 33877)
(define GL_FOG_COORDINATE_ARRAY_POINTER 33878)
(define GL_FOG_COORDINATE_ARRAY 33879)
(define GL_COLOR_SUM 33880)
(define GL_CURRENT_SECONDARY_COLOR 33881)
(define GL_SECONDARY_COLOR_ARRAY_SIZE 33882)
(define GL_SECONDARY_COLOR_ARRAY_TYPE 33883)
(define GL_SECONDARY_COLOR_ARRAY_STRIDE 33884)
(define GL_SECONDARY_COLOR_ARRAY_POINTER 33885)
(define GL_SECONDARY_COLOR_ARRAY 33886)
(define GL_POINT_SIZE_MIN 33062)
(define GL_POINT_SIZE_MAX 33063)
(define GL_POINT_FADE_THRESHOLD_SIZE 33064)
(define GL_POINT_DISTANCE_ATTENUATION 33065)
(define GL_BLEND_DST_RGB 32968)
(define GL_BLEND_SRC_RGB 32969)
(define GL_BLEND_DST_ALPHA 32970)
(define GL_BLEND_SRC_ALPHA 32971)
(define GL_GENERATE_MIPMAP 33169)
(define GL_GENERATE_MIPMAP_HINT 33170)
(define GL_INCR_WRAP 34055)
(define GL_DECR_WRAP 34056)
(define GL_MIRRORED_REPEAT 33648)
(define GL_MAX_TEXTURE_LOD_BIAS 34045)
(define GL_TEXTURE_FILTER_CONTROL 34048)
(define GL_TEXTURE_LOD_BIAS 34049)
(define GL_ARRAY_BUFFER 34962)
(define GL_ELEMENT_ARRAY_BUFFER 34963)
(define GL_ARRAY_BUFFER_BINDING 34964)
(define GL_ELEMENT_ARRAY_BUFFER_BINDING 34965)
(define GL_VERTEX_ARRAY_BUFFER_BINDING 34966)
(define GL_NORMAL_ARRAY_BUFFER_BINDING 34967)
(define GL_COLOR_ARRAY_BUFFER_BINDING 34968)
(define GL_INDEX_ARRAY_BUFFER_BINDING 34969)
(define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 34970)
(define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 34971)
(define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 34972)
(define GL_FOG_COORD_ARRAY_BUFFER_BINDING 34973)
(define GL_WEIGHT_ARRAY_BUFFER_BINDING 34974)
(define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 34975)
(define GL_STREAM_DRAW 35040)
(define GL_STREAM_READ 35041)
(define GL_STREAM_COPY 35042)
(define GL_STATIC_DRAW 35044)
(define GL_STATIC_READ 35045)
(define GL_STATIC_COPY 35046)
(define GL_DYNAMIC_DRAW 35048)
(define GL_DYNAMIC_READ 35049)
(define GL_DYNAMIC_COPY 35050)
(define GL_READ_ONLY 35000)
(define GL_WRITE_ONLY 35001)
(define GL_READ_WRITE 35002)
(define GL_BUFFER_SIZE 34660)
(define GL_BUFFER_USAGE 34661)
(define GL_BUFFER_ACCESS 35003)
(define GL_BUFFER_MAPPED 35004)
(define GL_BUFFER_MAP_POINTER 35005)
(define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 34973)
(define GL_CURRENT_PROGRAM 35725)
(define GL_SHADER_TYPE 35663)
(define GL_DELETE_STATUS 35712)
(define GL_COMPILE_STATUS 35713)
(define GL_LINK_STATUS 35714)
(define GL_VALIDATE_STATUS 35715)
(define GL_INFO_LOG_LENGTH 35716)
(define GL_ATTACHED_SHADERS 35717)
(define GL_ACTIVE_UNIFORMS 35718)
(define GL_ACTIVE_UNIFORM_MAX_LENGTH 35719)
(define GL_SHADER_SOURCE_LENGTH 35720)
(define GL_FLOAT_VEC2 35664)
(define GL_FLOAT_VEC3 35665)
(define GL_FLOAT_VEC4 35666)
(define GL_INT_VEC2 35667)
(define GL_INT_VEC3 35668)
(define GL_INT_VEC4 35669)
(define GL_BOOL 35670)
(define GL_BOOL_VEC2 35671)
(define GL_BOOL_VEC3 35672)
(define GL_BOOL_VEC4 35673)
(define GL_FLOAT_MAT2 35674)
(define GL_FLOAT_MAT3 35675)
(define GL_FLOAT_MAT4 35676)
(define GL_SAMPLER_1D 35677)
(define GL_SAMPLER_2D 35678)
(define GL_SAMPLER_3D 35679)
(define GL_SAMPLER_CUBE 35680)
(define GL_SAMPLER_1D_SHADOW 35681)
(define GL_SAMPLER_2D_SHADOW 35682)
(define GL_SHADING_LANGUAGE_VERSION 35724)
(define GL_VERTEX_SHADER 35633)
(define GL_MAX_VERTEX_UNIFORM_COMPONENTS 35658)
(define GL_MAX_VARYING_FLOATS 35659)
(define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 35660)
(define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 35661)
(define GL_ACTIVE_ATTRIBUTES 35721)
(define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 35722)
(define GL_FRAGMENT_SHADER 35632)
(define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 35657)
(define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 35723)
(define GL_MAX_VERTEX_ATTRIBS 34921)
(define GL_VERTEX_ATTRIB_ARRAY_ENABLED 34338)
(define GL_VERTEX_ATTRIB_ARRAY_SIZE 34339)
(define GL_VERTEX_ATTRIB_ARRAY_STRIDE 34340)
(define GL_VERTEX_ATTRIB_ARRAY_TYPE 34341)
(define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 34922)
(define GL_CURRENT_VERTEX_ATTRIB 34342)
(define GL_VERTEX_ATTRIB_ARRAY_POINTER 34373)
(define GL_VERTEX_PROGRAM_POINT_SIZE 34370)
(define GL_VERTEX_PROGRAM_TWO_SIDE 34371)
(define GL_MAX_TEXTURE_COORDS 34929)
(define GL_MAX_TEXTURE_IMAGE_UNITS 34930)
(define GL_MAX_DRAW_BUFFERS 34852)
(define GL_DRAW_BUFFER0 34853)
(define GL_DRAW_BUFFER1 34854)
(define GL_DRAW_BUFFER2 34855)
(define GL_DRAW_BUFFER3 34856)
(define GL_DRAW_BUFFER4 34857)
(define GL_DRAW_BUFFER5 34858)
(define GL_DRAW_BUFFER6 34859)
(define GL_DRAW_BUFFER7 34860)
(define GL_DRAW_BUFFER8 34861)
(define GL_DRAW_BUFFER9 34862)
(define GL_DRAW_BUFFER10 34863)
(define GL_DRAW_BUFFER11 34864)
(define GL_DRAW_BUFFER12 34865)
(define GL_DRAW_BUFFER13 34866)
(define GL_DRAW_BUFFER14 34867)
(define GL_DRAW_BUFFER15 34868)
(define GL_POINT_SPRITE 34913)
(define GL_COORD_REPLACE 34914)
(define GL_POINT_SPRITE_COORD_ORIGIN 36000)
(define GL_LOWER_LEFT 36001)
(define GL_UPPER_LEFT 36002)
(define GL_STENCIL_BACK_FUNC 34816)
(define GL_STENCIL_BACK_VALUE_MASK 36004)
(define GL_STENCIL_BACK_REF 36003)
(define GL_STENCIL_BACK_FAIL 34817)
(define GL_STENCIL_BACK_PASS_DEPTH_FAIL 34818)
(define GL_STENCIL_BACK_PASS_DEPTH_PASS 34819)
(define GL_STENCIL_BACK_WRITEMASK 36005)
(define GL_CURRENT_RASTER_SECONDARY_COLOR 33887)
(define GL_PIXEL_PACK_BUFFER 35051)
(define GL_PIXEL_UNPACK_BUFFER 35052)
(define GL_PIXEL_PACK_BUFFER_BINDING 35053)
(define GL_PIXEL_UNPACK_BUFFER_BINDING 35055)
(define GL_FLOAT_MAT2x3 35685)
(define GL_FLOAT_MAT2x4 35686)
(define GL_FLOAT_MAT3x2 35687)
(define GL_FLOAT_MAT3x4 35688)
(define GL_FLOAT_MAT4x2 35689)
(define GL_FLOAT_MAT4x3 35690)
(define GL_SRGB 35904)
(define GL_SRGB8 35905)
(define GL_SRGB_ALPHA 35906)
(define GL_SRGB8_ALPHA8 35907)
(define GL_SLUMINANCE_ALPHA 35908)
(define GL_SLUMINANCE8_ALPHA8 35909)
(define GL_SLUMINANCE 35910)
(define GL_SLUMINANCE8 35911)
(define GL_COMPRESSED_SRGB 35912)
(define GL_COMPRESSED_SRGB_ALPHA 35913)
(define GL_COMPRESSED_SLUMINANCE 35914)
(define GL_COMPRESSED_SLUMINANCE_ALPHA 35915)
(define glAccum (c-lambda (GLenum GLfloat) void "glAccum"))
(define glAlphaFunc (c-lambda (GLenum GLclampf) void "glAlphaFunc"))
(define glAreTexturesResident (c-lambda (GLsizei (pointer GLuint) (pointer GLboolean)) GLboolean "glAreTexturesResident"))
(define glArrayElement (c-lambda (GLint) void "glArrayElement"))
(define glBegin (c-lambda (GLenum) void "glBegin"))
(define glBindTexture (c-lambda (GLenum GLuint) void "glBindTexture"))
(define glBitmap (c-lambda (GLsizei GLsizei GLfloat GLfloat GLfloat GLfloat (pointer GLubyte)) void "glBitmap"))
(define glBlendColor (c-lambda (GLclampf GLclampf GLclampf GLclampf) void "glBlendColor"))
(define glBlendEquation (c-lambda (GLenum) void "glBlendEquation"))
(define glBlendEquationSeparate (c-lambda (GLenum GLenum) void "glBlendEquationSeparate"))
(define glBlendFunc (c-lambda (GLenum GLenum) void "glBlendFunc"))
(define glCallList (c-lambda (GLuint) void "glCallList"))
(define glCallLists (c-lambda (GLsizei GLenum (pointer GLvoid)) void "glCallLists"))
(define glClear (c-lambda (GLbitfield) void "glClear"))
(define glClearAccum (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glClearAccum"))
(define glClearColor (c-lambda (GLclampf GLclampf GLclampf GLclampf) void "glClearColor"))
(define glClearDepth (c-lambda (GLclampd) void "glClearDepth"))
(define glClearIndex (c-lambda (GLfloat) void "glClearIndex"))
(define glClearStencil (c-lambda (GLint) void "glClearStencil"))
(define glClipPlane (c-lambda (GLenum (pointer GLdouble)) void "glClipPlane"))
(define glColor3b (c-lambda (GLbyte GLbyte GLbyte) void "glColor3b"))
(define glColor3bv (c-lambda ((pointer GLbyte)) void "glColor3bv"))
(define glColor3d (c-lambda (GLdouble GLdouble GLdouble) void "glColor3d"))
(define glColor3dv (c-lambda ((pointer GLdouble)) void "glColor3dv"))
(define glColor3f (c-lambda (GLfloat GLfloat GLfloat) void "glColor3f"))
(define glColor3fv (c-lambda ((pointer GLfloat)) void "glColor3fv"))
(define glColor3i (c-lambda (GLint GLint GLint) void "glColor3i"))
(define glColor3iv (c-lambda ((pointer GLint)) void "glColor3iv"))
(define glColor3s (c-lambda (GLshort GLshort GLshort) void "glColor3s"))
(define glColor3sv (c-lambda ((pointer GLshort)) void "glColor3sv"))
(define glColor3ub (c-lambda (GLubyte GLubyte GLubyte) void "glColor3ub"))
(define glColor3ubv (c-lambda ((pointer GLubyte)) void "glColor3ubv"))
(define glColor3ui (c-lambda (GLuint GLuint GLuint) void "glColor3ui"))
(define glColor3uiv (c-lambda ((pointer GLuint)) void "glColor3uiv"))
(define glColor3us (c-lambda (GLushort GLushort GLushort) void "glColor3us"))
(define glColor3usv (c-lambda ((pointer GLushort)) void "glColor3usv"))
(define glColor4b (c-lambda (GLbyte GLbyte GLbyte GLbyte) void "glColor4b"))
(define glColor4bv (c-lambda ((pointer GLbyte)) void "glColor4bv"))
(define glColor4d (c-lambda (GLdouble GLdouble GLdouble GLdouble) void "glColor4d"))
(define glColor4dv (c-lambda ((pointer GLdouble)) void "glColor4dv"))
(define glColor4f (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glColor4f"))
(define glColor4fv (c-lambda ((pointer GLfloat)) void "glColor4fv"))
(define glColor4i (c-lambda (GLint GLint GLint GLint) void "glColor4i"))
(define glColor4iv (c-lambda ((pointer GLint)) void "glColor4iv"))
(define glColor4s (c-lambda (GLshort GLshort GLshort GLshort) void "glColor4s"))
(define glColor4sv (c-lambda ((pointer GLshort)) void "glColor4sv"))
(define glColor4ub (c-lambda (GLubyte GLubyte GLubyte GLubyte) void "glColor4ub"))
(define glColor4ubv (c-lambda ((pointer GLubyte)) void "glColor4ubv"))
(define glColor4ui (c-lambda (GLuint GLuint GLuint GLuint) void "glColor4ui"))
(define glColor4uiv (c-lambda ((pointer GLuint)) void "glColor4uiv"))
(define glColor4us (c-lambda (GLushort GLushort GLushort GLushort) void "glColor4us"))
(define glColor4usv (c-lambda ((pointer GLushort)) void "glColor4usv"))
(define glColorMask (c-lambda (GLboolean GLboolean GLboolean GLboolean) void "glColorMask"))
(define glColorMaterial (c-lambda (GLenum GLenum) void "glColorMaterial"))
(define glColorPointer (c-lambda (GLint GLenum GLsizei (pointer GLvoid)) void "glColorPointer"))
(define glColorSubTable (c-lambda (GLenum GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glColorSubTable"))
(define glColorTable (c-lambda (GLenum GLenum GLsizei GLenum GLenum (pointer GLvoid)) void "glColorTable"))
(define glColorTableParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glColorTableParameterfv"))
(define glColorTableParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glColorTableParameteriv"))
(define glConvolutionFilter1D (c-lambda (GLenum GLenum GLsizei GLenum GLenum (pointer GLvoid)) void "glConvolutionFilter1D"))
(define glConvolutionFilter2D (c-lambda (GLenum GLenum GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glConvolutionFilter2D"))
(define glConvolutionParameterf (c-lambda (GLenum GLenum GLfloat) void "glConvolutionParameterf"))
(define glConvolutionParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glConvolutionParameterfv"))
(define glConvolutionParameteri (c-lambda (GLenum GLenum GLint) void "glConvolutionParameteri"))
(define glConvolutionParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glConvolutionParameteriv"))
(define glCopyColorSubTable (c-lambda (GLenum GLsizei GLint GLint GLsizei) void "glCopyColorSubTable"))
(define glCopyColorTable (c-lambda (GLenum GLenum GLint GLint GLsizei) void "glCopyColorTable"))
(define glCopyConvolutionFilter1D (c-lambda (GLenum GLenum GLint GLint GLsizei) void "glCopyConvolutionFilter1D"))
(define glCopyConvolutionFilter2D (c-lambda (GLenum GLenum GLint GLint GLsizei GLsizei) void "glCopyConvolutionFilter2D"))
(define glCopyPixels (c-lambda (GLint GLint GLsizei GLsizei GLenum) void "glCopyPixels"))
(define glCopyTexImage1D (c-lambda (GLenum GLint GLenum GLint GLint GLsizei GLint) void "glCopyTexImage1D"))
(define glCopyTexImage2D (c-lambda (GLenum GLint GLenum GLint GLint GLsizei GLsizei GLint) void "glCopyTexImage2D"))
(define glCopyTexSubImage1D (c-lambda (GLenum GLint GLint GLint GLint GLsizei) void "glCopyTexSubImage1D"))
(define glCopyTexSubImage2D (c-lambda (GLenum GLint GLint GLint GLint GLint GLsizei GLsizei) void "glCopyTexSubImage2D"))
(define glCopyTexSubImage3D (c-lambda (GLenum GLint GLint GLint GLint GLint GLint GLsizei GLsizei) void "glCopyTexSubImage3D"))
(define glCullFace (c-lambda (GLenum) void "glCullFace"))
(define glDeleteLists (c-lambda (GLuint GLsizei) void "glDeleteLists"))
(define glDeleteTextures (c-lambda (GLsizei (pointer GLuint)) void "glDeleteTextures"))
(define glDepthFunc (c-lambda (GLenum) void "glDepthFunc"))
(define glDepthMask (c-lambda (GLboolean) void "glDepthMask"))
(define glDepthRange (c-lambda (GLclampd GLclampd) void "glDepthRange"))
(define glDisable (c-lambda (GLenum) void "glDisable"))
(define glDisableClientState (c-lambda (GLenum) void "glDisableClientState"))
(define glDrawArrays (c-lambda (GLenum GLint GLsizei) void "glDrawArrays"))
(define glDrawBuffer (c-lambda (GLenum) void "glDrawBuffer"))
(define glDrawElements (c-lambda (GLenum GLsizei GLenum (pointer GLvoid)) void "glDrawElements"))
(define glDrawPixels (c-lambda (GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glDrawPixels"))
(define glDrawRangeElements (c-lambda (GLenum GLuint GLuint GLsizei GLenum (pointer GLvoid)) void "glDrawRangeElements"))
(define glEdgeFlag (c-lambda (GLboolean) void "glEdgeFlag"))
(define glEdgeFlagPointer (c-lambda (GLsizei (pointer GLvoid)) void "glEdgeFlagPointer"))
(define glEdgeFlagv (c-lambda ((pointer GLboolean)) void "glEdgeFlagv"))
(define glEnable (c-lambda (GLenum) void "glEnable"))
(define glEnableClientState (c-lambda (GLenum) void "glEnableClientState"))
(define glEnd (c-lambda () void "glEnd"))
(define glEndList (c-lambda () void "glEndList"))
(define glEvalCoord1d (c-lambda (GLdouble) void "glEvalCoord1d"))
(define glEvalCoord1dv (c-lambda ((pointer GLdouble)) void "glEvalCoord1dv"))
(define glEvalCoord1f (c-lambda (GLfloat) void "glEvalCoord1f"))
(define glEvalCoord1fv (c-lambda ((pointer GLfloat)) void "glEvalCoord1fv"))
(define glEvalCoord2d (c-lambda (GLdouble GLdouble) void "glEvalCoord2d"))
(define glEvalCoord2dv (c-lambda ((pointer GLdouble)) void "glEvalCoord2dv"))
(define glEvalCoord2f (c-lambda (GLfloat GLfloat) void "glEvalCoord2f"))
(define glEvalCoord2fv (c-lambda ((pointer GLfloat)) void "glEvalCoord2fv"))
(define glEvalMesh1 (c-lambda (GLenum GLint GLint) void "glEvalMesh1"))
(define glEvalMesh2 (c-lambda (GLenum GLint GLint GLint GLint) void "glEvalMesh2"))
(define glEvalPoint1 (c-lambda (GLint) void "glEvalPoint1"))
(define glEvalPoint2 (c-lambda (GLint GLint) void "glEvalPoint2"))
(define glFeedbackBuffer (c-lambda (GLsizei GLenum (pointer GLfloat)) void "glFeedbackBuffer"))
(define glFinish (c-lambda () void "glFinish"))
(define glFlush (c-lambda () void "glFlush"))
(define glFogf (c-lambda (GLenum GLfloat) void "glFogf"))
(define glFogfv (c-lambda (GLenum (pointer GLfloat)) void "glFogfv"))
(define glFogi (c-lambda (GLenum GLint) void "glFogi"))
(define glFogiv (c-lambda (GLenum (pointer GLint)) void "glFogiv"))
(define glFrontFace (c-lambda (GLenum) void "glFrontFace"))
(define glFrustum (c-lambda (GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble) void "glFrustum"))
(define glGenLists (c-lambda (GLsizei) GLuint "glGenLists"))
(define glGenTextures (c-lambda (GLsizei (pointer GLuint)) void "glGenTextures"))
(define glGetBooleanv (c-lambda (GLenum (pointer GLboolean)) void "glGetBooleanv"))
(define glGetClipPlane (c-lambda (GLenum (pointer GLdouble)) void "glGetClipPlane"))
(define glGetColorTable (c-lambda (GLenum GLenum GLenum (pointer GLvoid)) void "glGetColorTable"))
(define glGetColorTableParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetColorTableParameterfv"))
(define glGetColorTableParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetColorTableParameteriv"))
(define glGetConvolutionFilter (c-lambda (GLenum GLenum GLenum (pointer GLvoid)) void "glGetConvolutionFilter"))
(define glGetConvolutionParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetConvolutionParameterfv"))
(define glGetConvolutionParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetConvolutionParameteriv"))
(define glGetDoublev (c-lambda (GLenum (pointer GLdouble)) void "glGetDoublev"))
(define glGetError (c-lambda () GLenum "glGetError"))
(define glGetFloatv (c-lambda (GLenum (pointer GLfloat)) void "glGetFloatv"))
(define glGetHistogram (c-lambda (GLenum GLboolean GLenum GLenum (pointer GLvoid)) void "glGetHistogram"))
(define glGetHistogramParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetHistogramParameterfv"))
(define glGetHistogramParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetHistogramParameteriv"))
(define glGetIntegerv (c-lambda (GLenum (pointer GLint)) void "glGetIntegerv"))
(define glGetLightfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetLightfv"))
(define glGetLightiv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetLightiv"))
(define glGetMapdv (c-lambda (GLenum GLenum (pointer GLdouble)) void "glGetMapdv"))
(define glGetMapfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetMapfv"))
(define glGetMapiv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetMapiv"))
(define glGetMaterialfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetMaterialfv"))
(define glGetMaterialiv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetMaterialiv"))
(define glGetMinmax (c-lambda (GLenum GLboolean GLenum GLenum (pointer GLvoid)) void "glGetMinmax"))
(define glGetMinmaxParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetMinmaxParameterfv"))
(define glGetMinmaxParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetMinmaxParameteriv"))
(define glGetPixelMapfv (c-lambda (GLenum (pointer GLfloat)) void "glGetPixelMapfv"))
(define glGetPixelMapuiv (c-lambda (GLenum (pointer GLuint)) void "glGetPixelMapuiv"))
(define glGetPixelMapusv (c-lambda (GLenum (pointer GLushort)) void "glGetPixelMapusv"))
(define glGetPointerv (c-lambda (GLenum (pointer (pointer GLvoid))) void "glGetPointerv"))
(define glGetPolygonStipple (c-lambda ((pointer GLubyte)) void "glGetPolygonStipple"))
(define glGetSeparableFilter (c-lambda (GLenum GLenum GLenum (pointer GLvoid) (pointer GLvoid) (pointer GLvoid)) void "glGetSeparableFilter"))
(define glGetString (c-lambda (GLenum) (pointer GLubyte) "glGetString"))
(define glGetTexEnvfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexEnvfv"))
(define glGetTexEnviv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetTexEnviv"))
(define glGetTexGendv (c-lambda (GLenum GLenum (pointer GLdouble)) void "glGetTexGendv"))
(define glGetTexGenfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexGenfv"))
(define glGetTexGeniv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetTexGeniv"))
(define glGetTexImage (c-lambda (GLenum GLint GLenum GLenum (pointer GLvoid)) void "glGetTexImage"))
(define glGetTexLevelParameterfv (c-lambda (GLenum GLint GLenum (pointer GLfloat)) void "glGetTexLevelParameterfv"))
(define glGetTexLevelParameteriv (c-lambda (GLenum GLint GLenum (pointer GLint)) void "glGetTexLevelParameteriv"))
(define glGetTexParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexParameterfv"))
(define glGetTexParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetTexParameteriv"))
(define glHint (c-lambda (GLenum GLenum) void "glHint"))
(define glHistogram (c-lambda (GLenum GLsizei GLenum GLboolean) void "glHistogram"))
(define glIndexMask (c-lambda (GLuint) void "glIndexMask"))
(define glIndexPointer (c-lambda (GLenum GLsizei (pointer GLvoid)) void "glIndexPointer"))
(define glIndexd (c-lambda (GLdouble) void "glIndexd"))
(define glIndexdv (c-lambda ((pointer GLdouble)) void "glIndexdv"))
(define glIndexf (c-lambda (GLfloat) void "glIndexf"))
(define glIndexfv (c-lambda ((pointer GLfloat)) void "glIndexfv"))
(define glIndexi (c-lambda (GLint) void "glIndexi"))
(define glIndexiv (c-lambda ((pointer GLint)) void "glIndexiv"))
(define glIndexs (c-lambda (GLshort) void "glIndexs"))
(define glIndexsv (c-lambda ((pointer GLshort)) void "glIndexsv"))
(define glIndexub (c-lambda (GLubyte) void "glIndexub"))
(define glIndexubv (c-lambda ((pointer GLubyte)) void "glIndexubv"))
(define glInitNames (c-lambda () void "glInitNames"))
(define glInterleavedArrays (c-lambda (GLenum GLsizei (pointer GLvoid)) void "glInterleavedArrays"))
(define glIsEnabled (c-lambda (GLenum) GLboolean "glIsEnabled"))
(define glIsList (c-lambda (GLuint) GLboolean "glIsList"))
(define glIsTexture (c-lambda (GLuint) GLboolean "glIsTexture"))
(define glLightModelf (c-lambda (GLenum GLfloat) void "glLightModelf"))
(define glLightModelfv (c-lambda (GLenum (pointer GLfloat)) void "glLightModelfv"))
(define glLightModeli (c-lambda (GLenum GLint) void "glLightModeli"))
(define glLightModeliv (c-lambda (GLenum (pointer GLint)) void "glLightModeliv"))
(define glLightf (c-lambda (GLenum GLenum GLfloat) void "glLightf"))
(define glLightfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glLightfv"))
(define glLighti (c-lambda (GLenum GLenum GLint) void "glLighti"))
(define glLightiv (c-lambda (GLenum GLenum (pointer GLint)) void "glLightiv"))
(define glLineStipple (c-lambda (GLint GLushort) void "glLineStipple"))
(define glLineWidth (c-lambda (GLfloat) void "glLineWidth"))
(define glListBase (c-lambda (GLuint) void "glListBase"))
(define glLoadIdentity (c-lambda () void "glLoadIdentity"))
(define glLoadMatrixd (c-lambda ((pointer GLdouble)) void "glLoadMatrixd"))
(define glLoadMatrixf (c-lambda ((pointer GLfloat)) void "glLoadMatrixf"))
(define glLoadName (c-lambda (GLuint) void "glLoadName"))
(define glLogicOp (c-lambda (GLenum) void "glLogicOp"))
(define glMap1d (c-lambda (GLenum GLdouble GLdouble GLint GLint (pointer GLdouble)) void "glMap1d"))
(define glMap1f (c-lambda (GLenum GLfloat GLfloat GLint GLint (pointer GLfloat)) void "glMap1f"))
(define glMap2d (c-lambda (GLenum GLdouble GLdouble GLint GLint GLdouble GLdouble GLint GLint (pointer GLdouble)) void "glMap2d"))
(define glMap2f (c-lambda (GLenum GLfloat GLfloat GLint GLint GLfloat GLfloat GLint GLint (pointer GLfloat)) void "glMap2f"))
(define glMapGrid1d (c-lambda (GLint GLdouble GLdouble) void "glMapGrid1d"))
(define glMapGrid1f (c-lambda (GLint GLfloat GLfloat) void "glMapGrid1f"))
(define glMapGrid2d (c-lambda (GLint GLdouble GLdouble GLint GLdouble GLdouble) void "glMapGrid2d"))
(define glMapGrid2f (c-lambda (GLint GLfloat GLfloat GLint GLfloat GLfloat) void "glMapGrid2f"))
(define glMaterialf (c-lambda (GLenum GLenum GLfloat) void "glMaterialf"))
(define glMaterialfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glMaterialfv"))
(define glMateriali (c-lambda (GLenum GLenum GLint) void "glMateriali"))
(define glMaterialiv (c-lambda (GLenum GLenum (pointer GLint)) void "glMaterialiv"))
(define glMatrixMode (c-lambda (GLenum) void "glMatrixMode"))
(define glMinmax (c-lambda (GLenum GLenum GLboolean) void "glMinmax"))
(define glMultMatrixd (c-lambda ((pointer GLdouble)) void "glMultMatrixd"))
(define glMultMatrixf (c-lambda ((pointer GLfloat)) void "glMultMatrixf"))
(define glNewList (c-lambda (GLuint GLenum) void "glNewList"))
(define glNormal3b (c-lambda (GLbyte GLbyte GLbyte) void "glNormal3b"))
(define glNormal3bv (c-lambda ((pointer GLbyte)) void "glNormal3bv"))
(define glNormal3d (c-lambda (GLdouble GLdouble GLdouble) void "glNormal3d"))
(define glNormal3dv (c-lambda ((pointer GLdouble)) void "glNormal3dv"))
(define glNormal3f (c-lambda (GLfloat GLfloat GLfloat) void "glNormal3f"))
(define glNormal3fv (c-lambda ((pointer GLfloat)) void "glNormal3fv"))
(define glNormal3i (c-lambda (GLint GLint GLint) void "glNormal3i"))
(define glNormal3iv (c-lambda ((pointer GLint)) void "glNormal3iv"))
(define glNormal3s (c-lambda (GLshort GLshort GLshort) void "glNormal3s"))
(define glNormal3sv (c-lambda ((pointer GLshort)) void "glNormal3sv"))
(define glNormalPointer (c-lambda (GLenum GLsizei (pointer GLvoid)) void "glNormalPointer"))
(define glOrtho (c-lambda (GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble) void "glOrtho"))
(define glPassThrough (c-lambda (GLfloat) void "glPassThrough"))
(define glPixelMapfv (c-lambda (GLenum GLint (pointer GLfloat)) void "glPixelMapfv"))
(define glPixelMapuiv (c-lambda (GLenum GLint (pointer GLuint)) void "glPixelMapuiv"))
(define glPixelMapusv (c-lambda (GLenum GLint (pointer GLushort)) void "glPixelMapusv"))
(define glPixelStoref (c-lambda (GLenum GLfloat) void "glPixelStoref"))
(define glPixelStorei (c-lambda (GLenum GLint) void "glPixelStorei"))
(define glPixelTransferf (c-lambda (GLenum GLfloat) void "glPixelTransferf"))
(define glPixelTransferi (c-lambda (GLenum GLint) void "glPixelTransferi"))
(define glPixelZoom (c-lambda (GLfloat GLfloat) void "glPixelZoom"))
(define glPointSize (c-lambda (GLfloat) void "glPointSize"))
(define glPolygonMode (c-lambda (GLenum GLenum) void "glPolygonMode"))
(define glPolygonOffset (c-lambda (GLfloat GLfloat) void "glPolygonOffset"))
(define glPolygonStipple (c-lambda ((pointer GLubyte)) void "glPolygonStipple"))
(define glPopAttrib (c-lambda () void "glPopAttrib"))
(define glPopClientAttrib (c-lambda () void "glPopClientAttrib"))
(define glPopMatrix (c-lambda () void "glPopMatrix"))
(define glPopName (c-lambda () void "glPopName"))
(define glPrioritizeTextures (c-lambda (GLsizei (pointer GLuint) (pointer GLclampf)) void "glPrioritizeTextures"))
(define glPushAttrib (c-lambda (GLbitfield) void "glPushAttrib"))
(define glPushClientAttrib (c-lambda (GLbitfield) void "glPushClientAttrib"))
(define glPushMatrix (c-lambda () void "glPushMatrix"))
(define glPushName (c-lambda (GLuint) void "glPushName"))
(define glRasterPos2d (c-lambda (GLdouble GLdouble) void "glRasterPos2d"))
(define glRasterPos2dv (c-lambda ((pointer GLdouble)) void "glRasterPos2dv"))
(define glRasterPos2f (c-lambda (GLfloat GLfloat) void "glRasterPos2f"))
(define glRasterPos2fv (c-lambda ((pointer GLfloat)) void "glRasterPos2fv"))
(define glRasterPos2i (c-lambda (GLint GLint) void "glRasterPos2i"))
(define glRasterPos2iv (c-lambda ((pointer GLint)) void "glRasterPos2iv"))
(define glRasterPos2s (c-lambda (GLshort GLshort) void "glRasterPos2s"))
(define glRasterPos2sv (c-lambda ((pointer GLshort)) void "glRasterPos2sv"))
(define glRasterPos3d (c-lambda (GLdouble GLdouble GLdouble) void "glRasterPos3d"))
(define glRasterPos3dv (c-lambda ((pointer GLdouble)) void "glRasterPos3dv"))
(define glRasterPos3f (c-lambda (GLfloat GLfloat GLfloat) void "glRasterPos3f"))
(define glRasterPos3fv (c-lambda ((pointer GLfloat)) void "glRasterPos3fv"))
(define glRasterPos3i (c-lambda (GLint GLint GLint) void "glRasterPos3i"))
(define glRasterPos3iv (c-lambda ((pointer GLint)) void "glRasterPos3iv"))
(define glRasterPos3s (c-lambda (GLshort GLshort GLshort) void "glRasterPos3s"))
(define glRasterPos3sv (c-lambda ((pointer GLshort)) void "glRasterPos3sv"))
(define glRasterPos4d (c-lambda (GLdouble GLdouble GLdouble GLdouble) void "glRasterPos4d"))
(define glRasterPos4dv (c-lambda ((pointer GLdouble)) void "glRasterPos4dv"))
(define glRasterPos4f (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glRasterPos4f"))
(define glRasterPos4fv (c-lambda ((pointer GLfloat)) void "glRasterPos4fv"))
(define glRasterPos4i (c-lambda (GLint GLint GLint GLint) void "glRasterPos4i"))
(define glRasterPos4iv (c-lambda ((pointer GLint)) void "glRasterPos4iv"))
(define glRasterPos4s (c-lambda (GLshort GLshort GLshort GLshort) void "glRasterPos4s"))
(define glRasterPos4sv (c-lambda ((pointer GLshort)) void "glRasterPos4sv"))
(define glReadBuffer (c-lambda (GLenum) void "glReadBuffer"))
(define glReadPixels (c-lambda (GLint GLint GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glReadPixels"))
(define glRectd (c-lambda (GLdouble GLdouble GLdouble GLdouble) void "glRectd"))
(define glRectdv (c-lambda ((pointer GLdouble) (pointer GLdouble)) void "glRectdv"))
(define glRectf (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glRectf"))
(define glRectfv (c-lambda ((pointer GLfloat) (pointer GLfloat)) void "glRectfv"))
(define glRecti (c-lambda (GLint GLint GLint GLint) void "glRecti"))
(define glRectiv (c-lambda ((pointer GLint) (pointer GLint)) void "glRectiv"))
(define glRects (c-lambda (GLshort GLshort GLshort GLshort) void "glRects"))
(define glRectsv (c-lambda ((pointer GLshort) (pointer GLshort)) void "glRectsv"))
(define glRenderMode (c-lambda (GLenum) GLint "glRenderMode"))
(define glResetHistogram (c-lambda (GLenum) void "glResetHistogram"))
(define glResetMinmax (c-lambda (GLenum) void "glResetMinmax"))
(define glRotated (c-lambda (GLdouble GLdouble GLdouble GLdouble) void "glRotated"))
(define glRotatef (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glRotatef"))
(define glScaled (c-lambda (GLdouble GLdouble GLdouble) void "glScaled"))
(define glScalef (c-lambda (GLfloat GLfloat GLfloat) void "glScalef"))
(define glScissor (c-lambda (GLint GLint GLsizei GLsizei) void "glScissor"))
(define glSelectBuffer (c-lambda (GLsizei (pointer GLuint)) void "glSelectBuffer"))
(define glSeparableFilter2D (c-lambda (GLenum GLenum GLsizei GLsizei GLenum GLenum (pointer GLvoid) (pointer GLvoid)) void "glSeparableFilter2D"))
(define glShadeModel (c-lambda (GLenum) void "glShadeModel"))
(define glStencilFunc (c-lambda (GLenum GLint GLuint) void "glStencilFunc"))
(define glStencilMask (c-lambda (GLuint) void "glStencilMask"))
(define glStencilOp (c-lambda (GLenum GLenum GLenum) void "glStencilOp"))
(define glTexCoord1d (c-lambda (GLdouble) void "glTexCoord1d"))
(define glTexCoord1dv (c-lambda ((pointer GLdouble)) void "glTexCoord1dv"))
(define glTexCoord1f (c-lambda (GLfloat) void "glTexCoord1f"))
(define glTexCoord1fv (c-lambda ((pointer GLfloat)) void "glTexCoord1fv"))
(define glTexCoord1i (c-lambda (GLint) void "glTexCoord1i"))
(define glTexCoord1iv (c-lambda ((pointer GLint)) void "glTexCoord1iv"))
(define glTexCoord1s (c-lambda (GLshort) void "glTexCoord1s"))
(define glTexCoord1sv (c-lambda ((pointer GLshort)) void "glTexCoord1sv"))
(define glTexCoord2d (c-lambda (GLdouble GLdouble) void "glTexCoord2d"))
(define glTexCoord2dv (c-lambda ((pointer GLdouble)) void "glTexCoord2dv"))
(define glTexCoord2f (c-lambda (GLfloat GLfloat) void "glTexCoord2f"))
(define glTexCoord2fv (c-lambda ((pointer GLfloat)) void "glTexCoord2fv"))
(define glTexCoord2i (c-lambda (GLint GLint) void "glTexCoord2i"))
(define glTexCoord2iv (c-lambda ((pointer GLint)) void "glTexCoord2iv"))
(define glTexCoord2s (c-lambda (GLshort GLshort) void "glTexCoord2s"))
(define glTexCoord2sv (c-lambda ((pointer GLshort)) void "glTexCoord2sv"))
(define glTexCoord3d (c-lambda (GLdouble GLdouble GLdouble) void "glTexCoord3d"))
(define glTexCoord3dv (c-lambda ((pointer GLdouble)) void "glTexCoord3dv"))
(define glTexCoord3f (c-lambda (GLfloat GLfloat GLfloat) void "glTexCoord3f"))
(define glTexCoord3fv (c-lambda ((pointer GLfloat)) void "glTexCoord3fv"))
(define glTexCoord3i (c-lambda (GLint GLint GLint) void "glTexCoord3i"))
(define glTexCoord3iv (c-lambda ((pointer GLint)) void "glTexCoord3iv"))
(define glTexCoord3s (c-lambda (GLshort GLshort GLshort) void "glTexCoord3s"))
(define glTexCoord3sv (c-lambda ((pointer GLshort)) void "glTexCoord3sv"))
(define glTexCoord4d (c-lambda (GLdouble GLdouble GLdouble GLdouble) void "glTexCoord4d"))
(define glTexCoord4dv (c-lambda ((pointer GLdouble)) void "glTexCoord4dv"))
(define glTexCoord4f (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glTexCoord4f"))
(define glTexCoord4fv (c-lambda ((pointer GLfloat)) void "glTexCoord4fv"))
(define glTexCoord4i (c-lambda (GLint GLint GLint GLint) void "glTexCoord4i"))
(define glTexCoord4iv (c-lambda ((pointer GLint)) void "glTexCoord4iv"))
(define glTexCoord4s (c-lambda (GLshort GLshort GLshort GLshort) void "glTexCoord4s"))
(define glTexCoord4sv (c-lambda ((pointer GLshort)) void "glTexCoord4sv"))
(define glTexCoordPointer (c-lambda (GLint GLenum GLsizei (pointer GLvoid)) void "glTexCoordPointer"))
(define glTexEnvf (c-lambda (GLenum GLenum GLfloat) void "glTexEnvf"))
(define glTexEnvfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexEnvfv"))
(define glTexEnvi (c-lambda (GLenum GLenum GLint) void "glTexEnvi"))
(define glTexEnviv (c-lambda (GLenum GLenum (pointer GLint)) void "glTexEnviv"))
(define glTexGend (c-lambda (GLenum GLenum GLdouble) void "glTexGend"))
(define glTexGendv (c-lambda (GLenum GLenum (pointer GLdouble)) void "glTexGendv"))
(define glTexGenf (c-lambda (GLenum GLenum GLfloat) void "glTexGenf"))
(define glTexGenfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexGenfv"))
(define glTexGeni (c-lambda (GLenum GLenum GLint) void "glTexGeni"))
(define glTexGeniv (c-lambda (GLenum GLenum (pointer GLint)) void "glTexGeniv"))
(define glTexImage1D (c-lambda (GLenum GLint GLenum GLsizei GLint GLenum GLenum (pointer GLvoid)) void "glTexImage1D"))
(define glTexImage2D (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLint GLenum GLenum (pointer GLvoid)) void "glTexImage2D"))
(define glTexImage3D (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLenum GLenum (pointer GLvoid)) void "glTexImage3D"))
(define glTexParameterf (c-lambda (GLenum GLenum GLfloat) void "glTexParameterf"))
(define glTexParameterfv (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexParameterfv"))
(define glTexParameteri (c-lambda (GLenum GLenum GLint) void "glTexParameteri"))
(define glTexParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glTexParameteriv"))
(define glTexSubImage1D (c-lambda (GLenum GLint GLint GLsizei GLenum GLenum (pointer GLvoid)) void "glTexSubImage1D"))
(define glTexSubImage2D (c-lambda (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glTexSubImage2D"))
(define glTexSubImage3D (c-lambda (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum (pointer GLvoid)) void "glTexSubImage3D"))
(define glTranslated (c-lambda (GLdouble GLdouble GLdouble) void "glTranslated"))
(define glTranslatef (c-lambda (GLfloat GLfloat GLfloat) void "glTranslatef"))
(define glVertex2d (c-lambda (GLdouble GLdouble) void "glVertex2d"))
(define glVertex2dv (c-lambda ((pointer GLdouble)) void "glVertex2dv"))
(define glVertex2f (c-lambda (GLfloat GLfloat) void "glVertex2f"))
(define glVertex2fv (c-lambda ((pointer GLfloat)) void "glVertex2fv"))
(define glVertex2i (c-lambda (GLint GLint) void "glVertex2i"))
(define glVertex2iv (c-lambda ((pointer GLint)) void "glVertex2iv"))
(define glVertex2s (c-lambda (GLshort GLshort) void "glVertex2s"))
(define glVertex2sv (c-lambda ((pointer GLshort)) void "glVertex2sv"))
(define glVertex3d (c-lambda (GLdouble GLdouble GLdouble) void "glVertex3d"))
(define glVertex3dv (c-lambda ((pointer GLdouble)) void "glVertex3dv"))
(define glVertex3f (c-lambda (GLfloat GLfloat GLfloat) void "glVertex3f"))
(define glVertex3fv (c-lambda ((pointer GLfloat)) void "glVertex3fv"))
(define glVertex3i (c-lambda (GLint GLint GLint) void "glVertex3i"))
(define glVertex3iv (c-lambda ((pointer GLint)) void "glVertex3iv"))
(define glVertex3s (c-lambda (GLshort GLshort GLshort) void "glVertex3s"))
(define glVertex3sv (c-lambda ((pointer GLshort)) void "glVertex3sv"))
(define glVertex4d (c-lambda (GLdouble GLdouble GLdouble GLdouble) void "glVertex4d"))
(define glVertex4dv (c-lambda ((pointer GLdouble)) void "glVertex4dv"))
(define glVertex4f (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glVertex4f"))
(define glVertex4fv (c-lambda ((pointer GLfloat)) void "glVertex4fv"))
(define glVertex4i (c-lambda (GLint GLint GLint GLint) void "glVertex4i"))
(define glVertex4iv (c-lambda ((pointer GLint)) void "glVertex4iv"))
(define glVertex4s (c-lambda (GLshort GLshort GLshort GLshort) void "glVertex4s"))
(define glVertex4sv (c-lambda ((pointer GLshort)) void "glVertex4sv"))
(define glVertexPointer (c-lambda (GLint GLenum GLsizei (pointer GLvoid)) void "glVertexPointer"))
(define glViewport (c-lambda (GLint GLint GLsizei GLsizei) void "glViewport"))
(define glSampleCoverage (c-lambda (GLclampf GLboolean) void "glSampleCoverage"))
(define glSamplePass (c-lambda (GLenum) void "glSamplePass"))
(define glLoadTransposeMatrixf (c-lambda ((pointer GLfloat)) void "glLoadTransposeMatrixf"))
(define glLoadTransposeMatrixd (c-lambda ((pointer GLdouble)) void "glLoadTransposeMatrixd"))
(define glMultTransposeMatrixf (c-lambda ((pointer GLfloat)) void "glMultTransposeMatrixf"))
(define glMultTransposeMatrixd (c-lambda ((pointer GLdouble)) void "glMultTransposeMatrixd"))
(define glCompressedTexImage3D (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLsizei (pointer GLvoid)) void "glCompressedTexImage3D"))
(define glCompressedTexImage2D (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLint GLsizei (pointer GLvoid)) void "glCompressedTexImage2D"))
(define glCompressedTexImage1D (c-lambda (GLenum GLint GLenum GLsizei GLint GLsizei (pointer GLvoid)) void "glCompressedTexImage1D"))
(define glCompressedTexSubImage3D (c-lambda (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLsizei (pointer GLvoid)) void "glCompressedTexSubImage3D"))
(define glCompressedTexSubImage2D (c-lambda (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLsizei (pointer GLvoid)) void "glCompressedTexSubImage2D"))
(define glCompressedTexSubImage1D (c-lambda (GLenum GLint GLint GLsizei GLenum GLsizei (pointer GLvoid)) void "glCompressedTexSubImage1D"))
(define glGetCompressedTexImage (c-lambda (GLenum GLint (pointer GLvoid)) void "glGetCompressedTexImage"))
(define glActiveTexture (c-lambda (GLenum) void "glActiveTexture"))
(define glClientActiveTexture (c-lambda (GLenum) void "glClientActiveTexture"))
(define glMultiTexCoord1d (c-lambda (GLenum GLdouble) void "glMultiTexCoord1d"))
(define glMultiTexCoord1dv (c-lambda (GLenum (pointer GLdouble)) void "glMultiTexCoord1dv"))
(define glMultiTexCoord1f (c-lambda (GLenum GLfloat) void "glMultiTexCoord1f"))
(define glMultiTexCoord1fv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord1fv"))
(define glMultiTexCoord1i (c-lambda (GLenum GLint) void "glMultiTexCoord1i"))
(define glMultiTexCoord1iv (c-lambda (GLenum (pointer GLint)) void "glMultiTexCoord1iv"))
(define glMultiTexCoord1s (c-lambda (GLenum GLshort) void "glMultiTexCoord1s"))
(define glMultiTexCoord1sv (c-lambda (GLenum (pointer GLshort)) void "glMultiTexCoord1sv"))
(define glMultiTexCoord2d (c-lambda (GLenum GLdouble GLdouble) void "glMultiTexCoord2d"))
(define glMultiTexCoord2dv (c-lambda (GLenum (pointer GLdouble)) void "glMultiTexCoord2dv"))
(define glMultiTexCoord2f (c-lambda (GLenum GLfloat GLfloat) void "glMultiTexCoord2f"))
(define glMultiTexCoord2fv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord2fv"))
(define glMultiTexCoord2i (c-lambda (GLenum GLint GLint) void "glMultiTexCoord2i"))
(define glMultiTexCoord2iv (c-lambda (GLenum (pointer GLint)) void "glMultiTexCoord2iv"))
(define glMultiTexCoord2s (c-lambda (GLenum GLshort GLshort) void "glMultiTexCoord2s"))
(define glMultiTexCoord2sv (c-lambda (GLenum (pointer GLshort)) void "glMultiTexCoord2sv"))
(define glMultiTexCoord3d (c-lambda (GLenum GLdouble GLdouble GLdouble) void "glMultiTexCoord3d"))
(define glMultiTexCoord3dv (c-lambda (GLenum (pointer GLdouble)) void "glMultiTexCoord3dv"))
(define glMultiTexCoord3f (c-lambda (GLenum GLfloat GLfloat GLfloat) void "glMultiTexCoord3f"))
(define glMultiTexCoord3fv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord3fv"))
(define glMultiTexCoord3i (c-lambda (GLenum GLint GLint GLint) void "glMultiTexCoord3i"))
(define glMultiTexCoord3iv (c-lambda (GLenum (pointer GLint)) void "glMultiTexCoord3iv"))
(define glMultiTexCoord3s (c-lambda (GLenum GLshort GLshort GLshort) void "glMultiTexCoord3s"))
(define glMultiTexCoord3sv (c-lambda (GLenum (pointer GLshort)) void "glMultiTexCoord3sv"))
(define glMultiTexCoord4d (c-lambda (GLenum GLdouble GLdouble GLdouble GLdouble) void "glMultiTexCoord4d"))
(define glMultiTexCoord4dv (c-lambda (GLenum (pointer GLdouble)) void "glMultiTexCoord4dv"))
(define glMultiTexCoord4f (c-lambda (GLenum GLfloat GLfloat GLfloat GLfloat) void "glMultiTexCoord4f"))
(define glMultiTexCoord4fv (c-lambda (GLenum (pointer GLfloat)) void "glMultiTexCoord4fv"))
(define glMultiTexCoord4i (c-lambda (GLenum GLint GLint GLint GLint) void "glMultiTexCoord4i"))
(define glMultiTexCoord4iv (c-lambda (GLenum (pointer GLint)) void "glMultiTexCoord4iv"))
(define glMultiTexCoord4s (c-lambda (GLenum GLshort GLshort GLshort GLshort) void "glMultiTexCoord4s"))
(define glMultiTexCoord4sv (c-lambda (GLenum (pointer GLshort)) void "glMultiTexCoord4sv"))
(define glFogCoordf (c-lambda (GLfloat) void "glFogCoordf"))
(define glFogCoordfv (c-lambda ((pointer GLfloat)) void "glFogCoordfv"))
(define glFogCoordd (c-lambda (GLdouble) void "glFogCoordd"))
(define glFogCoorddv (c-lambda ((pointer GLdouble)) void "glFogCoorddv"))
(define glFogCoordPointer (c-lambda (GLenum GLsizei (pointer GLvoid)) void "glFogCoordPointer"))
(define glSecondaryColor3b (c-lambda (GLbyte GLbyte GLbyte) void "glSecondaryColor3b"))
(define glSecondaryColor3bv (c-lambda ((pointer GLbyte)) void "glSecondaryColor3bv"))
(define glSecondaryColor3d (c-lambda (GLdouble GLdouble GLdouble) void "glSecondaryColor3d"))
(define glSecondaryColor3dv (c-lambda ((pointer GLdouble)) void "glSecondaryColor3dv"))
(define glSecondaryColor3f (c-lambda (GLfloat GLfloat GLfloat) void "glSecondaryColor3f"))
(define glSecondaryColor3fv (c-lambda ((pointer GLfloat)) void "glSecondaryColor3fv"))
(define glSecondaryColor3i (c-lambda (GLint GLint GLint) void "glSecondaryColor3i"))
(define glSecondaryColor3iv (c-lambda ((pointer GLint)) void "glSecondaryColor3iv"))
(define glSecondaryColor3s (c-lambda (GLshort GLshort GLshort) void "glSecondaryColor3s"))
(define glSecondaryColor3sv (c-lambda ((pointer GLshort)) void "glSecondaryColor3sv"))
(define glSecondaryColor3ub (c-lambda (GLubyte GLubyte GLubyte) void "glSecondaryColor3ub"))
(define glSecondaryColor3ubv (c-lambda ((pointer GLubyte)) void "glSecondaryColor3ubv"))
(define glSecondaryColor3ui (c-lambda (GLuint GLuint GLuint) void "glSecondaryColor3ui"))
(define glSecondaryColor3uiv (c-lambda ((pointer GLuint)) void "glSecondaryColor3uiv"))
(define glSecondaryColor3us (c-lambda (GLushort GLushort GLushort) void "glSecondaryColor3us"))
(define glSecondaryColor3usv (c-lambda ((pointer GLushort)) void "glSecondaryColor3usv"))
(define glSecondaryColorPointer (c-lambda (GLint GLenum GLsizei (pointer GLvoid)) void "glSecondaryColorPointer"))
(define glPointParameterf (c-lambda (GLenum GLfloat) void "glPointParameterf"))
(define glPointParameterfv (c-lambda (GLenum (pointer GLfloat)) void "glPointParameterfv"))
(define glPointParameteri (c-lambda (GLenum GLint) void "glPointParameteri"))
(define glPointParameteriv (c-lambda (GLenum (pointer GLint)) void "glPointParameteriv"))
(define glBlendFuncSeparate (c-lambda (GLenum GLenum GLenum GLenum) void "glBlendFuncSeparate"))
(define glMultiDrawArrays (c-lambda (GLenum (pointer GLint) (pointer GLsizei) GLsizei) void "glMultiDrawArrays"))
(define glMultiDrawElements (c-lambda (GLenum (pointer GLsizei) GLenum (pointer (pointer GLvoid)) GLsizei) void "glMultiDrawElements"))
(define glWindowPos2d (c-lambda (GLdouble GLdouble) void "glWindowPos2d"))
(define glWindowPos2dv (c-lambda ((pointer GLdouble)) void "glWindowPos2dv"))
(define glWindowPos2f (c-lambda (GLfloat GLfloat) void "glWindowPos2f"))
(define glWindowPos2fv (c-lambda ((pointer GLfloat)) void "glWindowPos2fv"))
(define glWindowPos2i (c-lambda (GLint GLint) void "glWindowPos2i"))
(define glWindowPos2iv (c-lambda ((pointer GLint)) void "glWindowPos2iv"))
(define glWindowPos2s (c-lambda (GLshort GLshort) void "glWindowPos2s"))
(define glWindowPos2sv (c-lambda ((pointer GLshort)) void "glWindowPos2sv"))
(define glWindowPos3d (c-lambda (GLdouble GLdouble GLdouble) void "glWindowPos3d"))
(define glWindowPos3dv (c-lambda ((pointer GLdouble)) void "glWindowPos3dv"))
(define glWindowPos3f (c-lambda (GLfloat GLfloat GLfloat) void "glWindowPos3f"))
(define glWindowPos3fv (c-lambda ((pointer GLfloat)) void "glWindowPos3fv"))
(define glWindowPos3i (c-lambda (GLint GLint GLint) void "glWindowPos3i"))
(define glWindowPos3iv (c-lambda ((pointer GLint)) void "glWindowPos3iv"))
(define glWindowPos3s (c-lambda (GLshort GLshort GLshort) void "glWindowPos3s"))
(define glWindowPos3sv (c-lambda ((pointer GLshort)) void "glWindowPos3sv"))
(define glGenQueries (c-lambda (GLsizei (pointer GLuint)) void "glGenQueries"))
(define glDeleteQueries (c-lambda (GLsizei (pointer GLuint)) void "glDeleteQueries"))
(define glIsQuery (c-lambda (GLuint) GLboolean "glIsQuery"))
(define glBeginQuery (c-lambda (GLenum GLuint) void "glBeginQuery"))
(define glEndQuery (c-lambda (GLenum) void "glEndQuery"))
(define glGetQueryiv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetQueryiv"))
(define glGetQueryObjectiv (c-lambda (GLuint GLenum (pointer GLint)) void "glGetQueryObjectiv"))
(define glGetQueryObjectuiv (c-lambda (GLuint GLenum (pointer GLuint)) void "glGetQueryObjectuiv"))
(define glBindBuffer (c-lambda (GLenum GLuint) void "glBindBuffer"))
(define glDeleteBuffers (c-lambda (GLsizei (pointer GLuint)) void "glDeleteBuffers"))
(define glGenBuffers (c-lambda (GLsizei (pointer GLuint)) void "glGenBuffers"))
(define glIsBuffer (c-lambda (GLuint) GLboolean "glIsBuffer"))
(define glBufferData (c-lambda (GLenum GLsizeiptr (pointer GLvoid) GLenum) void "glBufferData"))
(define glBufferSubData (c-lambda (GLenum GLintptr GLsizeiptr (pointer GLvoid)) void "glBufferSubData"))
(define glGetBufferSubData (c-lambda (GLenum GLintptr GLsizeiptr (pointer GLvoid)) void "glGetBufferSubData"))
(define glMapBuffer (c-lambda (GLenum GLenum) (pointer GLvoid) "glMapBuffer"))
(define glUnmapBuffer (c-lambda (GLenum) GLboolean "glUnmapBuffer"))
(define glGetBufferParameteriv (c-lambda (GLenum GLenum (pointer GLint)) void "glGetBufferParameteriv"))
(define glGetBufferPointerv (c-lambda (GLenum GLenum (pointer (pointer GLvoid))) void "glGetBufferPointerv"))
(define glDrawBuffers (c-lambda (GLsizei (pointer GLenum)) void "glDrawBuffers"))
(define glVertexAttrib1d (c-lambda (GLuint GLdouble) void "glVertexAttrib1d"))
(define glVertexAttrib1dv (c-lambda (GLuint (pointer GLdouble)) void "glVertexAttrib1dv"))
(define glVertexAttrib1f (c-lambda (GLuint GLfloat) void "glVertexAttrib1f"))
(define glVertexAttrib1fv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib1fv"))
(define glVertexAttrib1s (c-lambda (GLuint GLshort) void "glVertexAttrib1s"))
(define glVertexAttrib1sv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib1sv"))
(define glVertexAttrib2d (c-lambda (GLuint GLdouble GLdouble) void "glVertexAttrib2d"))
(define glVertexAttrib2dv (c-lambda (GLuint (pointer GLdouble)) void "glVertexAttrib2dv"))
(define glVertexAttrib2f (c-lambda (GLuint GLfloat GLfloat) void "glVertexAttrib2f"))
(define glVertexAttrib2fv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib2fv"))
(define glVertexAttrib2s (c-lambda (GLuint GLshort GLshort) void "glVertexAttrib2s"))
(define glVertexAttrib2sv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib2sv"))
(define glVertexAttrib3d (c-lambda (GLuint GLdouble GLdouble GLdouble) void "glVertexAttrib3d"))
(define glVertexAttrib3dv (c-lambda (GLuint (pointer GLdouble)) void "glVertexAttrib3dv"))
(define glVertexAttrib3f (c-lambda (GLuint GLfloat GLfloat GLfloat) void "glVertexAttrib3f"))
(define glVertexAttrib3fv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib3fv"))
(define glVertexAttrib3s (c-lambda (GLuint GLshort GLshort GLshort) void "glVertexAttrib3s"))
(define glVertexAttrib3sv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib3sv"))
(define glVertexAttrib4Nbv (c-lambda (GLuint (pointer GLbyte)) void "glVertexAttrib4Nbv"))
(define glVertexAttrib4Niv (c-lambda (GLuint (pointer GLint)) void "glVertexAttrib4Niv"))
(define glVertexAttrib4Nsv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib4Nsv"))
(define glVertexAttrib4Nub (c-lambda (GLuint GLubyte GLubyte GLubyte GLubyte) void "glVertexAttrib4Nub"))
(define glVertexAttrib4Nubv (c-lambda (GLuint (pointer GLubyte)) void "glVertexAttrib4Nubv"))
(define glVertexAttrib4Nuiv (c-lambda (GLuint (pointer GLuint)) void "glVertexAttrib4Nuiv"))
(define glVertexAttrib4Nusv (c-lambda (GLuint (pointer GLushort)) void "glVertexAttrib4Nusv"))
(define glVertexAttrib4bv (c-lambda (GLuint (pointer GLbyte)) void "glVertexAttrib4bv"))
(define glVertexAttrib4d (c-lambda (GLuint GLdouble GLdouble GLdouble GLdouble) void "glVertexAttrib4d"))
(define glVertexAttrib4dv (c-lambda (GLuint (pointer GLdouble)) void "glVertexAttrib4dv"))
(define glVertexAttrib4f (c-lambda (GLuint GLfloat GLfloat GLfloat GLfloat) void "glVertexAttrib4f"))
(define glVertexAttrib4fv (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib4fv"))
(define glVertexAttrib4iv (c-lambda (GLuint (pointer GLint)) void "glVertexAttrib4iv"))
(define glVertexAttrib4s (c-lambda (GLuint GLshort GLshort GLshort GLshort) void "glVertexAttrib4s"))
(define glVertexAttrib4sv (c-lambda (GLuint (pointer GLshort)) void "glVertexAttrib4sv"))
(define glVertexAttrib4ubv (c-lambda (GLuint (pointer GLubyte)) void "glVertexAttrib4ubv"))
(define glVertexAttrib4uiv (c-lambda (GLuint (pointer GLuint)) void "glVertexAttrib4uiv"))
(define glVertexAttrib4usv (c-lambda (GLuint (pointer GLushort)) void "glVertexAttrib4usv"))
(define glVertexAttribPointer (c-lambda (GLuint GLint GLenum GLboolean GLsizei (pointer GLvoid)) void "glVertexAttribPointer"))
(define glEnableVertexAttribArray (c-lambda (GLuint) void "glEnableVertexAttribArray"))
(define glDisableVertexAttribArray (c-lambda (GLuint) void "glDisableVertexAttribArray"))
(define glGetVertexAttribdv (c-lambda (GLuint GLenum (pointer GLdouble)) void "glGetVertexAttribdv"))
(define glGetVertexAttribfv (c-lambda (GLuint GLenum (pointer GLfloat)) void "glGetVertexAttribfv"))
(define glGetVertexAttribiv (c-lambda (GLuint GLenum (pointer GLint)) void "glGetVertexAttribiv"))
(define glGetVertexAttribPointerv (c-lambda (GLuint GLenum (pointer (pointer GLvoid))) void "glGetVertexAttribPointerv"))
(define glDeleteShader (c-lambda (GLuint) void "glDeleteShader"))
(define glDetachShader (c-lambda (GLuint GLuint) void "glDetachShader"))
(define glCreateShader (c-lambda (GLenum) GLuint "glCreateShader"))
(define glShaderSource (c-lambda (GLuint GLsizei (pointer (pointer GLchar)) (pointer GLint)) void "glShaderSource"))
(define glCompileShader (c-lambda (GLuint) void "glCompileShader"))
(define glCreateProgram (c-lambda () GLuint "glCreateProgram"))
(define glAttachShader (c-lambda (GLuint GLuint) void "glAttachShader"))
(define glLinkProgram (c-lambda (GLuint) void "glLinkProgram"))
(define glUseProgram (c-lambda (GLuint) void "glUseProgram"))
(define glDeleteProgram (c-lambda (GLuint) void "glDeleteProgram"))
(define glValidateProgram (c-lambda (GLuint) void "glValidateProgram"))
(define glUniform1f (c-lambda (GLint GLfloat) void "glUniform1f"))
(define glUniform2f (c-lambda (GLint GLfloat GLfloat) void "glUniform2f"))
(define glUniform3f (c-lambda (GLint GLfloat GLfloat GLfloat) void "glUniform3f"))
(define glUniform4f (c-lambda (GLint GLfloat GLfloat GLfloat GLfloat) void "glUniform4f"))
(define glUniform1i (c-lambda (GLint GLint) void "glUniform1i"))
(define glUniform2i (c-lambda (GLint GLint GLint) void "glUniform2i"))
(define glUniform3i (c-lambda (GLint GLint GLint GLint) void "glUniform3i"))
(define glUniform4i (c-lambda (GLint GLint GLint GLint GLint) void "glUniform4i"))
(define glUniform1fv (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform1fv"))
(define glUniform2fv (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform2fv"))
(define glUniform3fv (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform3fv"))
(define glUniform4fv (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform4fv"))
(define glUniform1iv (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform1iv"))
(define glUniform2iv (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform2iv"))
(define glUniform3iv (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform3iv"))
(define glUniform4iv (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform4iv"))
(define glUniformMatrix2fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix2fv"))
(define glUniformMatrix3fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix3fv"))
(define glUniformMatrix4fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix4fv"))
(define glIsShader (c-lambda (GLuint) GLboolean "glIsShader"))
(define glIsProgram (c-lambda (GLuint) GLboolean "glIsProgram"))
(define glGetShaderiv (c-lambda (GLuint GLenum (pointer GLint)) void "glGetShaderiv"))
(define glGetProgramiv (c-lambda (GLuint GLenum (pointer GLint)) void "glGetProgramiv"))
(define glGetAttachedShaders (c-lambda (GLuint GLsizei (pointer GLsizei) (pointer GLuint)) void "glGetAttachedShaders"))
(define glGetShaderInfoLog (c-lambda (GLuint GLsizei (pointer GLsizei) (pointer GLchar)) void "glGetShaderInfoLog"))
(define glGetProgramInfoLog (c-lambda (GLuint GLsizei (pointer GLsizei) (pointer GLchar)) void "glGetProgramInfoLog"))
(define glGetUniformLocation (c-lambda (GLuint (pointer GLchar)) GLint "glGetUniformLocation"))
(define glGetActiveUniform (c-lambda (GLuint GLuint GLsizei (pointer GLsizei) (pointer GLint) (pointer GLenum) (pointer GLchar)) void "glGetActiveUniform"))
(define glGetUniformfv (c-lambda (GLuint GLint (pointer GLfloat)) void "glGetUniformfv"))
(define glGetUniformiv (c-lambda (GLuint GLint (pointer GLint)) void "glGetUniformiv"))
(define glGetShaderSource (c-lambda (GLuint GLsizei (pointer GLsizei) (pointer GLchar)) void "glGetShaderSource"))
(define glBindAttribLocation (c-lambda (GLuint GLuint (pointer GLchar)) void "glBindAttribLocation"))
(define glGetActiveAttrib (c-lambda (GLuint GLuint GLsizei (pointer GLsizei) (pointer GLint) (pointer GLenum) (pointer GLchar)) void "glGetActiveAttrib"))
(define glGetAttribLocation (c-lambda (GLuint (pointer GLchar)) GLint "glGetAttribLocation"))
(define glStencilFuncSeparate (c-lambda (GLenum GLenum GLint GLuint) void "glStencilFuncSeparate"))
(define glStencilOpSeparate (c-lambda (GLenum GLenum GLenum GLenum) void "glStencilOpSeparate"))
(define glStencilMaskSeparate (c-lambda (GLenum GLuint) void "glStencilMaskSeparate"))
(define glUniformMatrix2x3fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix2x3fv"))
(define glUniformMatrix3x2fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix3x2fv"))
(define glUniformMatrix2x4fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix2x4fv"))
(define glUniformMatrix4x2fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix4x2fv"))
(define glUniformMatrix3x4fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix3x4fv"))
(define glUniformMatrix4x3fv (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix4x3fv"))
